[{"path":"https://spatialnous.github.io/alcyon/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Petros Koutsolampros. Maintainer, author.            'sala' library contributor 'depthmapX' Fani Kostourou. Contributor. Kimon Krenz. Contributor. Alasdair Turner. Contributor.           'sala' library contributor 'depthmapX' Tasos Varoudis. Contributor.            'sala' library contributor 'depthmapX' Christian Sailer. Contributor.           'sala' library contributor 'depthmapX' Eva Friedrich. Contributor.           'sala' library contributor 'depthmapX' University College London. Funder, copyright holder.           2015 - 2020 Spacelab UK. Funder.           2015 - 2020","code":""},{"path":"https://spatialnous.github.io/alcyon/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Koutsolampros P (2024). “alcyon: R package Spatial Network Analysis.” R package version 0.7.0, https://github.com/spatialnous/alcyon.","code":"@Misc{,   title = {{alcyon}: An R package for Spatial Network Analysis},   author = {Petros Koutsolampros},   year = {2024},   note = {R package version 0.7.0},   version = {0.7.0},   url = {https://github.com/spatialnous/alcyon}, }"},{"path":"https://spatialnous.github.io/alcyon/index.html","id":"alcyon","dir":"","previous_headings":"","what":"alcyon","title":"Spatial Network Analysis","text":"R package spatial network analysis. Based rdepthmap package leveraging sala library depthmapX","code":""},{"path":"https://spatialnous.github.io/alcyon/index.html","id":"how-to-install","dir":"","previous_headings":"alcyon","what":"How to install:","title":"Spatial Network Analysis","text":"Windows users might need also install Rtools demonstration package took place “Space syntax analysis R” workshop 12th International Space Syntax Symposium (SSS12) China 8th July 2019, content may find .","code":"install.packages(\"alcyon\")"},{"path":"https://spatialnous.github.io/alcyon/index.html","id":"development","dir":"","previous_headings":"alcyon","what":"Development:","title":"Spatial Network Analysis","text":"Make sure git hooks enabled, avoid committing minor issues: change configure directly, instead change configure.ac run autoconf force enable OpenMP R built , install source package :","code":"git config --local core.hooksPath .githooks/ install.packages(\"alcyon\", configure.args = \"--enable-force-openmp\")"},{"path":"https://spatialnous.github.io/alcyon/reference/AgentLookMode.html","id":null,"dir":"Reference","previous_headings":"","what":"Agent look modes. — AgentLookMode","title":"Agent look modes. — AgentLookMode","text":"meant used indicate kind look function agents use look around decide go next. Possible values: AgentLookMode$None AgentLookMode$Standard AgentLookMode$LineOfSightLength AgentLookMode$OcclusionLength AgentLookMode$OcclusionAny AgentLookMode$OcclusionGroup45 (Occlusion group bins - 45 degrees) AgentLookMode$OcclusionGroup60 (Occlusion group bins - 60 degrees) AgentLookMode$OcclusionFurthest (Furthest occlusion per bin) AgentLookMode$BinFarDistance (Per bin far distance weighted) AgentLookMode$BinAngle (Per bin angle weighted) AgentLookMode$BinFarDistanceAngle (Per bin far-distance angle   weighted) AgentLookMode$BinMemory (Per bin memory)","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/AgentLookMode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent look modes. — AgentLookMode","text":"","code":"AgentLookMode"},{"path":"https://spatialnous.github.io/alcyon/reference/AgentLookMode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Agent look modes. — AgentLookMode","text":"object class list length 12.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/AgentLookMode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Agent look modes. — AgentLookMode","text":"list numbers representing agent look mode","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/AgentLookMode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Agent look modes. — AgentLookMode","text":"","code":"AgentLookMode$Standard #> [1] 1 AgentLookMode$LineOfSightLength #> [1] 2 AgentLookMode$OcclusionAny #> [1] 4"},{"path":"https://spatialnous.github.io/alcyon/reference/AllLineShapeGraph-class.html","id":null,"dir":"Reference","previous_headings":"","what":"All-line Axial ShapeGraph — AllLineShapeGraph-class","title":"All-line Axial ShapeGraph — AllLineShapeGraph-class","text":"representation sala's -line ShapeGraph R. Holds onto sala -line ShapeGraph pointer operates ","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/AxialShapeGraph-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Axial ShapeGraph — AxialShapeGraph-class","title":"Axial ShapeGraph — AxialShapeGraph-class","text":"representation sala's Axial ShapeGraph R. Holds onto sala Axial ShapeGraph pointer operates ","code":""},{"path":[]},{"path":"https://spatialnous.github.io/alcyon/reference/AxialShapeGraph_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset AxialShapeGraph objects — AxialShapeGraph_subset","title":"Subset AxialShapeGraph objects — AxialShapeGraph_subset","text":"Subsetting AxialShapeGraph objects essentially passes data sf. See sf","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/AxialShapeGraph_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset AxialShapeGraph objects — AxialShapeGraph_subset","text":"","code":"# S3 method for class 'AxialShapeGraph' x[...]  # S3 method for class 'AxialShapeGraph' x[...] <- value"},{"path":"https://spatialnous.github.io/alcyon/reference/AxialShapeGraph_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset AxialShapeGraph objects — AxialShapeGraph_subset","text":"x object class AxialShapeGraph passed stars[] ... parameters passed stars[] <- value value passed sf[] <-","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/PointMap-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PointMap — PointMap-class","title":"PointMap — PointMap-class","text":"representation sala's PointMap R. Holds onto sala PointMap pointer operates ","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/PointMap_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset PointMap objects — PointMap_subset","title":"Subset PointMap objects — PointMap_subset","text":"Subsetting PointMap objects essentially passes data stars See stars_subset","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/PointMap_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset PointMap objects — PointMap_subset","text":"","code":"# S3 method for class 'PointMap' x[...]  # S3 method for class 'PointMap' x[...] <- value"},{"path":"https://spatialnous.github.io/alcyon/reference/PointMap_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset PointMap objects — PointMap_subset","text":"x object class PointMap passed stars[] ... parameters passed stars[] <- value value passed stars[] <-","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/SegmentShapeGraph-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Segment ShapeGraph — SegmentShapeGraph-class","title":"Segment ShapeGraph — SegmentShapeGraph-class","text":"representation sala's Segment ShapeGraph R. Holds onto sala Segment ShapeGraph pointer operates ","code":""},{"path":[]},{"path":"https://spatialnous.github.io/alcyon/reference/SegmentShapeGraph_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset SegmentShapeGraph objects — SegmentShapeGraph_subset","title":"Subset SegmentShapeGraph objects — SegmentShapeGraph_subset","text":"Subsetting SegmentShapeGraph objects essentially passes data sf. See sf","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/SegmentShapeGraph_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset SegmentShapeGraph objects — SegmentShapeGraph_subset","text":"","code":"# S3 method for class 'SegmentShapeGraph' x[...]  # S3 method for class 'SegmentShapeGraph' x[...] <- value"},{"path":"https://spatialnous.github.io/alcyon/reference/SegmentShapeGraph_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset SegmentShapeGraph objects — SegmentShapeGraph_subset","text":"x object class SegmentShapeGraph passed stars[] ... parameters passed stars[] <- value value passed sf[] <-","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/ShapeMap-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ShapeMap class — ShapeMap-class","title":"ShapeMap class — ShapeMap-class","text":"representation sala's ShapeMap R. Holds onto sala ShapeMap pointer operates ","code":""},{"path":[]},{"path":"https://spatialnous.github.io/alcyon/reference/ShapeMap_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset ShapeMap objects — ShapeMap_subset","title":"Subset ShapeMap objects — ShapeMap_subset","text":"Subsetting ShapeMap objects essentially passes data sf. See sf","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/ShapeMap_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset ShapeMap objects — ShapeMap_subset","text":"","code":"# S3 method for class 'ShapeMap' x[...]  # S3 method for class 'ShapeMap' x[...] <- value"},{"path":"https://spatialnous.github.io/alcyon/reference/ShapeMap_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset ShapeMap objects — ShapeMap_subset","text":"x object class ShapeMap passed sf[] ... parameters passed sf[] <- value value passed sf[] <-","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/TraversalType.html","id":null,"dir":"Reference","previous_headings":"","what":"Traversal types — TraversalType","title":"Traversal types — TraversalType","text":"meant used indicate kind analysis meant carried .","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/TraversalType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Traversal types — TraversalType","text":"","code":"TraversalType"},{"path":"https://spatialnous.github.io/alcyon/reference/TraversalType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Traversal types — TraversalType","text":"object class list length 4.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/TraversalType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Traversal types — TraversalType","text":"list numbers representing particular analysis type","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/TraversalType.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Traversal types — TraversalType","text":"","code":"TraversalType$Angular #> [1] 1 TraversalType$Topological #> [1] 2 TraversalType$Metric #> [1] 3"},{"path":"https://spatialnous.github.io/alcyon/reference/VGALocalAlgorithm.html","id":null,"dir":"Reference","previous_headings":"","what":"VGA Local Analysis algorithms. — VGALocalAlgorithm","title":"VGA Local Analysis algorithms. — VGALocalAlgorithm","text":"Different algorithms calculating VGA Local metrics (Control, Controllability, Clustering Coefficient). VGALocalAlgorithm$None VGALocalAlgorithm$Standard VGALocalAlgorithm$AdjacencyMatrix","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/VGALocalAlgorithm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VGA Local Analysis algorithms. — VGALocalAlgorithm","text":"","code":"VGALocalAlgorithm"},{"path":"https://spatialnous.github.io/alcyon/reference/VGALocalAlgorithm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"VGA Local Analysis algorithms. — VGALocalAlgorithm","text":"object class list length 3.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/VGALocalAlgorithm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"VGA Local Analysis algorithms. — VGALocalAlgorithm","text":"list numbers representing algorithm","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/VGALocalAlgorithm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VGA Local Analysis algorithms. — VGALocalAlgorithm","text":"","code":"VGALocalAlgorithm$Angular #> NULL VGALocalAlgorithm$Topological #> NULL VGALocalAlgorithm$Metric #> NULL"},{"path":"https://spatialnous.github.io/alcyon/reference/agentAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Agent Analysis — agentAnalysis","title":"Agent Analysis — agentAnalysis","text":"Runs Agent Analysis given PointMap","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/agentAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent Analysis — agentAnalysis","text":"","code":"agentAnalysis(   pointMap,   timesteps,   releaseRate,   agentLifeTimesteps,   agentFov,   agentStepsToDecision,   agentLookMode,   originX = vector(),   originY = vector(),   locationSeed = 0L,   numberOfTrails = 0L,   getGateCounts = FALSE,   copyMap = TRUE,   verbose = FALSE,   progress = FALSE )"},{"path":"https://spatialnous.github.io/alcyon/reference/agentAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent Analysis — agentAnalysis","text":"pointMap PointMap, used exosomatic visual map agents take exploratory information timesteps Number total system timesteps. releaseRate Agent release rate (likelihood release per timestep). agentLifeTimesteps Agent total lifetime (timesteps) agentFov Agent field--view (32 bins = 360). agentStepsToDecision Agent steps turn decision. agentLookMode agent look mode. See AgentLookMode originX Agent starting points (x coordinates). originY Agent starting point (y coordinates). locationSeed Agents start random locations specific seed (0 10). Default 0. numberOfTrails Record trails amount agents (set 0 record , max possible currently = 50). getGateCounts Get values gates copyMap Optional. Copy internal sala map verbose Optional. Show information process. progress Optional. Show process progress.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/agentAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Agent Analysis — agentAnalysis","text":"Returns list : newAttributes: new attributes created   process trailMap: ShapeMap trails numberOfTrails set 0","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/agentAnalysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Agent Analysis — agentAnalysis","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.5,     fillX = 3.0,     fillY = 6.0,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) agentAnalysis(   pointMap,   timesteps = 3000L,   releaseRate = 0.1,   agentStepsToDecision = 3L,   agentFov = 11L,   agentLife = 1000L,   agentLookMode = AgentLookMode$Standard,   originX = NA,   originY = NA,   locationSeed = 1L,   numberOfTrails = 50L,   getGateCounts = FALSE,   verbose = FALSE ) #> $pointMap #> stars object with 2 dimensions and 8 attributes #> attribute(s): #>                            Min.     1st Qu.     Median         Mean     3rd Qu. #> Ref                     0.00000 196610.7500 393221.500 3.932215e+05 589832.2500 #> Connectivity           39.00000     65.0000     75.000 7.106667e+01     81.0000 #> Point First Moment     92.03807    145.1355    173.267 1.750389e+02    202.1131 #> Point Second Moment   240.00000    388.5625    531.500 5.387111e+02    665.5625 #> blocked                 0.00000      0.0000      0.000 3.205128e-01      1.0000 #> contextfilled           0.00000      0.0000      0.000 0.000000e+00      0.0000 #> filled                  0.00000      0.0000      1.000 5.769231e-01      1.0000 #> Gate Counts          1166.00000   1696.7500   2807.000 2.656367e+03   3265.7500 #>                             Max. NA's #> Ref                  786443.0000    0 #> Connectivity             88.0000   66 #> Point First Moment      292.1885   66 #> Point Second Moment    1157.7500   66 #> blocked                   1.0000    0 #> contextfilled             0.0000    0 #> filled                    1.0000    0 #> Gate Counts            5149.0000   66 #> dimension(s): #>   from to offset delta x/y #> x    1 13   1.75   0.5 [x] #> y    1 12   7.25  -0.5 [y] #>  #> $trailMap #> Simple feature collection with 50 features and 1 field #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 1.751471 ymin: 1.752596 xmax: 7.744374 ymax: 6.73951 #> CRS:           NA #> First 10 features: #>    Ref                       geometry #> 1    0 LINESTRING (5.276393 2.4472... #> 2    1 LINESTRING (4.341886 4.4743... #> 3    2 LINESTRING (2.485071 5.1212... #> 4    3 LINESTRING (4.314305 5.5357... #> 5    4 LINESTRING (3.121268 3.5149... #> 6    5 LINESTRING (5.040427 3.3030... #> 7    6 LINESTRING (2.723607 4.5527... #> 8    7 LINESTRING (2.474342 4.8418... #> 9    8 LINESTRING (5.005025 5.9292... #> 10   9 LINESTRING (4.014929 6.3787... #>"},{"path":"https://spatialnous.github.io/alcyon/reference/allToAllTraverse.html","id":null,"dir":"Reference","previous_headings":"","what":"All-to-all traversal — allToAllTraverse","title":"All-to-all traversal — allToAllTraverse","text":"Runs --traversal map graph. applicable : PointMaps (Visibility Graph Analysis) Axial ShapeGraphs (Axial analysis) Segment ShapeGraphs (Segment analysis)","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/allToAllTraverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All-to-all traversal — allToAllTraverse","text":"","code":"allToAllTraverse(   map,   traversalType,   radii,   radiusTraversalType,   weightByAttribute = NULL,   includeBetweenness = FALSE,   quantizationWidth = NA,   gatesOnly = FALSE,   nthreads = 1L,   copyMap = TRUE,   verbose = FALSE,   progress = FALSE )"},{"path":"https://spatialnous.github.io/alcyon/reference/allToAllTraverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All-to-all traversal — allToAllTraverse","text":"map PointMap, Axial ShapeGraph Segment ShapeGraph traversalType traversal type. See TraversalType radii list radii radiusTraversalType traversal type keep track whether analysis within radius limit. See TraversalType weightByAttribute attribute weigh analysis includeBetweenness Set TRUE also calculate betweenness (known Choice Space Syntax domain) quantizationWidth Set use chunks width instead continuous values cost traversal. equivalent \"tulip bins\" depthmapX's tulip analysis (1024 tulip bins = pi/1024 quantizationWidth). works Segment ShapeGraphs gatesOnly Optional. calculate results particular gate pixels. works PointMaps nthreads Optional. Use one threads. 1 default, set 0 use available. available PointMaps. copyMap Optional. Copy internal sala map verbose Optional. Show information process. progress Optional. Enable progress display","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/allToAllTraverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All-to-all traversal — allToAllTraverse","text":"new map results included","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/allToAllTraverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All-to-all traversal — allToAllTraverse","text":"","code":"# Pointmap analysis (VGA) mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.5,     fillX = 3.0,     fillY = 6.0,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) allToAllTraverse(pointMap,   traversalType = TraversalType$Angular,   radii = -1L,   radiusTraversalType = TraversalType$None ) #> stars object with 2 dimensions and 10 attributes #> attribute(s): #>                              Min.      1st Qu.       Median         Mean #> Ref                  0.000000e+00 1.966108e+05 3.932215e+05 3.932215e+05 #> Connectivity         3.900000e+01 6.500000e+01 7.500000e+01 7.106667e+01 #> Point First Moment   9.203807e+01 1.451355e+02 1.732670e+02 1.750389e+02 #> Point Second Moment  2.400000e+02 3.885625e+02 5.315000e+02 5.387111e+02 #> blocked              0.000000e+00 0.000000e+00 0.000000e+00 3.205128e-01 #> contextfilled        0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 #> filled               0.000000e+00 0.000000e+00 1.000000e+00 5.769231e-01 #> Angular Mean Depth   1.546766e-03 2.146721e-02 6.614886e-02 1.193368e-01 #> Angular Node Count   9.000000e+01 9.000000e+01 9.000000e+01 9.000000e+01 #> Angular Total Depth  1.392090e-01 1.932049e+00 5.953397e+00 1.074031e+01 #>                           3rd Qu.         Max. NA's #> Ref                  5.898322e+05 7.864430e+05    0 #> Connectivity         8.100000e+01 8.800000e+01   66 #> Point First Moment   2.021131e+02 2.921885e+02   66 #> Point Second Moment  6.655625e+02 1.157750e+03   66 #> blocked              1.000000e+00 1.000000e+00    0 #> contextfilled        0.000000e+00 0.000000e+00    0 #> filled               1.000000e+00 1.000000e+00    0 #> Angular Mean Depth   1.826283e-01 4.806018e-01   66 #> Angular Node Count   9.000000e+01 9.000000e+01   66 #> Angular Total Depth  1.643655e+01 4.325416e+01   66 #> dimension(s): #>   from to offset delta x/y #> x    1 13   1.75   0.5 [x] #> y    1 12   7.25  -0.5 [y]  # Axial analysis mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") allToAllTraverse(   shapeGraph,   traversalType = TraversalType$Topological,   radii = c(\"n\", \"3\"),   includeBetweenness = TRUE ) #> Simple feature collection with 58 features and 28 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 1             0            6            0    396.1881 #> 2             1            7            1    259.4803 #> 3             2            7            2    244.4770 #> 4             3            8            3    210.3450 #> 5             4            4            4    375.4797 #> 6             5            8            5    145.4648 #> 7             6            6            6    596.2349 #> 8             7            6            7    205.1829 #> 9             8            7            8    385.0117 #> 10            9           10            9    273.1483 #>                          geometry Data Map Ref Line Length Choice Choice R3 #> 1  LINESTRING (984 -1684, 1346...            0    396.1881    205        86 #> 2  LINESTRING (1306 -1497, 137...            1    259.4803    279        82 #> 3  LINESTRING (1257 -1772, 149...            2    244.4770    328       128 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450    493       191 #> 5  LINESTRING (1174 -1684, 153...            4    375.4797    118        24 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648    502       216 #> 7  LINESTRING (946 -1386, 1032...            6    596.2349    202        78 #> 8  LINESTRING (1350 -1896, 137...            7    205.1828    591       160 #> 9  LINESTRING (1117 -1979, 112...            8    385.0117    342       144 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483    647       248 #>    Choice [Norm] Choice [Norm] R3  Entropy Entropy R3 Harmonic Mean Depth #> 1     0.12844612       0.09523810 1.966392   1.431980            5.170979 #> 2     0.17481203       0.06972789 1.813029   1.435994           16.434782 #> 3     0.20551379       0.12367149 1.872506   1.452452           17.749153 #> 4     0.30889726       0.14404224 1.758874   1.463609           14.419703 #> 5     0.07393484       0.05161290 1.937888   1.321543            8.701672 #> 6     0.31453633       0.16289593 1.731490   1.433642           14.256503 #> 7     0.12656641       0.07536232 1.934941   1.426639            5.121012 #> 8     0.37030074       0.11611030 1.658470   1.394359           11.949306 #> 9     0.21428572       0.13913043 1.955858   1.452452            5.196212 #> 10    0.40538847       0.18702866 1.864475   1.511067            4.842767 #>    Harmonic Mean Depth R3 Integration [HH] Integration [HH] R3 #> 1               14.451612         1.917543            2.246524 #> 2               16.661158         2.151909            2.375361 #> 3               16.185471         2.060338            2.350789 #> 4               18.510180         2.361852            2.543419 #> 5                9.353847         1.524975            1.762609 #> 6               18.110973         2.548314            2.793591 #> 7               14.985915         2.082493            2.430477 #> 8               15.865385         2.391010            2.536365 #> 9               16.185471         2.151909            2.560681 #> 10              20.465117         2.482972            2.748533 #>    Integration [P-value] Integration [P-value] R3 Integration [Tekl] #> 1               1.917543                 2.246524          0.7220190 #> 2               2.151909                 2.375361          0.7405212 #> 3               2.060338                 2.350789          0.7334335 #> 4               2.361852                 2.543419          0.7561645 #> 5               1.524975                 1.762609          0.6878769 #> 6               2.548314                 2.793591          0.7694319 #> 7               2.082493                 2.430477          0.7351641 #> 8               2.391010                 2.536365          0.7582758 #> 9               2.151909                 2.560681          0.7405212 #> 10              2.482972                 2.748533          0.7648444 #>    Integration [Tekl] R3 Intensity Intensity R3 Mean Depth Mean Depth R3 #> 1              0.7498006 1.1405076     1.105388   2.771930      2.348837 #> 2              0.7585479 1.1815245     1.104611   2.578947      2.346939 #> 3              0.7573853 1.1677991     1.137754   2.649123      2.326087 #> 4              0.7702533 1.2594405     1.175322   2.438596      2.288461 #> 5              0.7073136 0.8920435     0.939764   3.228070      2.483871 #> 6              0.7878321 1.3390193     1.266384   2.333333      2.173077 #> 7              0.7635773 1.2198540     1.156069   2.631579      2.282609 #> 8              0.7694886 1.2023906     1.107285   2.421053      2.301887 #> 9              0.7734766 1.2746043     1.241186   2.578947      2.217391 #> 10             0.7847281 1.4044101     1.312894   2.368421      2.192308 #>    Node Count Node Count R3 Relativised Entropy Relativised Entropy R3 #> 1          58            44            1.760874               1.853100 #> 2          58            50            1.734981               1.858356 #> 3          58            47            1.748742               1.822981 #> 4          58            53            1.662805               1.783778 #> 5          58            32            2.097106               2.047915 #> 6          58            53            1.593437               1.692109 #> 7          58            47            1.676330               1.793509 #> 8          58            54            1.720402               1.844227 #> 9          58            47            1.626325               1.712716 #> 10         58            53            1.526621               1.657888  # Segment analysis mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_segment_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"SegmentShapeGraph\") allToAllTraverse(   shapeGraph,   radii = c(\"n\", \"100\"),   radiusTraversalType = TraversalType$Metric,   traversalType = TraversalType$Angular,   weightByAttribute = \"Segment Length\",   includeBetweenness = TRUE,   quantizationWidth = pi / 1024L,   verbose = FALSE,   progress = FALSE ) #> Simple feature collection with 173 features and 26 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 989.1063 ymin: -2040.514 xmax: 1377.667 ymax: -1535.739 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Angular_Connectivity Axial_Line_Ref Connectivity Data_Map_Ref #> 1             0             1.981438             -1            3            0 #> 2             1             2.115670             -1            4            1 #> 3             2             1.775849             -1            4            2 #> 4             3             2.034886             -1            4            3 #> 5             4             2.002752             -1            3            4 #> 6             5             2.052529             -1            3            5 #> 7             6             2.049290             -1            4            6 #> 8             7             2.035002             -1            4            7 #> 9             8             2.948040             -1            5            8 #> 10            9             4.000000             -1            6            9 #>    Segment_Length                       geometry Angular Connectivity #> 1       65.799698 LINESTRING (989.1063 -1681....             1.981438 #> 2       77.203362 LINESTRING (1049.228 -1654....             2.115669 #> 3       90.154808 LINESTRING (1119.769 -1623....             1.775849 #> 4       91.088219 LINESTRING (1202.144 -1586....             2.034886 #> 5       35.005592 LINESTRING (1285.372 -1549....             2.002752 #> 6       69.541687 LINESTRING (1317.357 -1535....             2.052529 #> 7       37.176987 LINESTRING (1336.921 -1602....             2.049290 #> 8       35.278736 LINESTRING (1347.381 -1638....             2.035002 #> 9       34.014023 LINESTRING (1357.306 -1672....             2.948040 #> 10       9.775865 LINESTRING (1366.875 -1704....             4.000000 #>    Axial Line Ref Data Map Ref Segment Length T1024 Choice #> 1              -1            0      65.799698          203 #> 2              -1            1      77.203362          484 #> 3              -1            2      90.154808         1406 #> 4              -1            3      91.088219          674 #> 5              -1            4      35.005592          497 #> 6              -1            5      69.541687          526 #> 7              -1            6      37.176987          767 #> 8              -1            7      35.278736         1348 #> 9              -1            8      34.014023         2059 #> 10             -1            9       9.775865         3136 #>    T1024 Choice R100.00 metric T1024 Choice [Segment Length Wgt] #> 1                            2                          659726.2 #> 2                            0                          997757.4 #> 3                            0                         2753404.2 #> 4                            0                         1370659.9 #> 5                            2                          910519.9 #> 6                            0                          974137.1 #> 7                            2                         1566921.5 #> 8                            7                         2342901.8 #> 9                           18                         3151169.5 #> 10                          19                         3774213.8 #>    T1024 Choice [Segment Length Wgt] R100.00 metric T1024 Integration #> 1                                          23681.04          87.44378 #> 2                                          16837.18          88.57600 #> 3                                          23477.67          90.19110 #> 4                                          20490.54          91.37754 #> 5                                          12713.72          91.42333 #> 6                                          18764.73         106.23274 #> 7                                          19753.70         106.20918 #> 8                                          19874.78         106.32710 #> 9                                          25365.45         106.71213 #> 10                                         32525.98         107.06703 #>    T1024 Integration R100.00 metric T1024 Integration [Segment Length Wgt] #> 1                          9.230036                               3224.680 #> 2                         11.808656                               3262.657 #> 3                         12.764543                               3379.409 #> 4                         12.047059                               3426.279 #> 5                          7.984406                               3428.560 #> 6                          8.870068                               3696.910 #> 7                         15.463087                               3693.893 #> 8                         23.844761                               3697.772 #> 9                         23.322910                               3714.063 #> 10                        21.867201                               3726.309 #>    T1024 Integration [Segment Length Wgt] R100.00 metric T1024 Node Count #> 1                                               396.2036              173 #> 2                                              1144.3008              173 #> 3                                              1431.5309              173 #> 4                                               995.1865              173 #> 5                                               494.8211              173 #> 6                                               485.0021              173 #> 7                                               711.6516              173 #> 8                                               912.5288              173 #> 9                                               836.5922              173 #> 10                                              819.1635              173 #>    T1024 Node Count R100.00 metric T1024 Total Depth #> 1                               11          342.2656 #> 2                                9          337.8906 #> 3                                6          331.8398 #> 4                                6          327.5312 #> 5                                4          327.3672 #> 6                                6          281.7305 #> 7                                9          281.7930 #> 8                               12          281.4805 #> 9                               13          280.4648 #> 10                              16          279.5352 #>    T1024 Total Depth R100.00 metric T1024 Total Depth [Segment Length Wgt] #> 1                         13.109375                              10672.612 #> 2                          6.859375                              10548.384 #> 3                          2.820312                              10183.959 #> 4                          2.988281                              10044.646 #> 5                          2.003906                              10037.964 #> 6                          4.058594                               9309.332 #> 7                          5.238281                               9316.935 #> 8                          6.039062                               9307.161 #> 9                          7.246094                               9266.337 #> 10                        11.707031                               9235.884 #>    T1024 Total Depth [Segment Length Wgt] R100.00 metric #> 1                                              424.32428 #> 2                                               91.94441 #> 3                                               85.85162 #> 4                                              100.36493 #> 5                                              112.90747 #> 6                                              237.47540 #> 7                                              274.22757 #> 8                                              284.32355 #> 9                                              322.21109 #> 10                                             440.65012 #>    T1024 Total Segment Length T1024 Total Segment Length R100.00 metric #> 1                    5866.495                                  410.0229 #> 2                    5866.495                                  324.3641 #> 3                    5866.495                                  350.5699 #> 4                    5866.495                                  316.0409 #> 5                    5866.495                                  236.3662 #> 6                    5866.495                                  339.3760 #> 7                    5866.495                                  441.7629 #> 8                    5866.495                                  509.3657 #> 9                    5866.495                                  519.1910 #> 10                   5866.495                                  600.8032"},{"path":"https://spatialnous.github.io/alcyon/reference/as.html","id":null,"dir":"Reference","previous_headings":"","what":"as(","title":"as(","text":"direct conversion, ShapeMap -> Axial -> Segment see axialToSegmentShapeGraph direct conversion, ShapeMap -> Axial -> Segment see axialToSegmentShapeGraph","code":""},{"path":[]},{"path":"https://spatialnous.github.io/alcyon/reference/axialAnalysisLocal.html","id":null,"dir":"Reference","previous_headings":"","what":"Axial analysis - local metrics — axialAnalysisLocal","title":"Axial analysis - local metrics — axialAnalysisLocal","text":"Runs axial analysis get local metrics Control Controllability","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/axialAnalysisLocal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axial analysis - local metrics — axialAnalysisLocal","text":"","code":"axialAnalysisLocal(shapeGraph, copyMap = TRUE, verbose = FALSE)"},{"path":"https://spatialnous.github.io/alcyon/reference/axialAnalysisLocal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axial analysis - local metrics — axialAnalysisLocal","text":"shapeGraph Axial ShapeGraph copyMap Optional. Copy internal sala map verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/axialAnalysisLocal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axial analysis - local metrics — axialAnalysisLocal","text":"Returns list : completed: Whether analysis completed newAttributes: new attributes created   process","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/axialAnalysisLocal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axial analysis - local metrics — axialAnalysisLocal","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") axialAnalysisLocal(shapeGraph) #> Simple feature collection with 58 features and 8 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 1             0            6            0    396.1881 #> 2             1            7            1    259.4803 #> 3             2            7            2    244.4770 #> 4             3            8            3    210.3450 #> 5             4            4            4    375.4797 #> 6             5            8            5    145.4648 #> 7             6            6            6    596.2349 #> 8             7            6            7    205.1829 #> 9             8            7            8    385.0117 #> 10            9           10            9    273.1483 #>                          geometry Data Map Ref Line Length  Control #> 1  LINESTRING (984 -1684, 1346...            0    396.1881 1.827381 #> 2  LINESTRING (1306 -1497, 137...            1    259.4803 1.642857 #> 3  LINESTRING (1257 -1772, 149...            2    244.4770 1.726190 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450 1.851190 #> 5  LINESTRING (1174 -1684, 153...            4    375.4797 1.101190 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648 2.177381 #> 7  LINESTRING (946 -1386, 1032...            6    596.2349 1.327778 #> 8  LINESTRING (1350 -1896, 137...            7    205.1828 1.235714 #> 9  LINESTRING (1117 -1979, 112...            8    385.0117 1.661111 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483 2.494048 #>    Controllability #> 1        0.2727273 #> 2        0.2800000 #> 3        0.2916667 #> 4        0.2758621 #> 5        0.3333333 #> 6        0.2285714 #> 7        0.2222222 #> 8        0.1935484 #> 9        0.2413793 #> 10       0.3125000"},{"path":"https://spatialnous.github.io/alcyon/reference/axialToSegmentShapeGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Axial to Segment ShapeGraph — axialToSegmentShapeGraph","title":"Axial to Segment ShapeGraph — axialToSegmentShapeGraph","text":"Convert Axial ShapeGraph Segment ShapeGraph","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/axialToSegmentShapeGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axial to Segment ShapeGraph — axialToSegmentShapeGraph","text":"","code":"axialToSegmentShapeGraph(axialShapeGraph, stubRemoval = NULL)"},{"path":"https://spatialnous.github.io/alcyon/reference/axialToSegmentShapeGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axial to Segment ShapeGraph — axialToSegmentShapeGraph","text":"axialShapeGraph Axial ShapeGraph stubRemoval Remove stubs axial lines shorter percentage (example provide 0.4 40%)","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/axialToSegmentShapeGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axial to Segment ShapeGraph — axialToSegmentShapeGraph","text":"new Segment ShapeGraph","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/axialToSegmentShapeGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axial to Segment ShapeGraph — axialToSegmentShapeGraph","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") axialToSegmentShapeGraph(shapeGraph, stubRemoval = 0.4) #> Simple feature collection with 191 features and 13 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Angular Connectivity Axial Connectivity Axial Data Map Ref Axial Line Length #> 1              3.155704                  6                  0          396.1881 #> 2              2.115669                  6                  0          396.1881 #> 3              1.775849                  6                  0          396.1881 #> 4              2.034886                  6                  0          396.1881 #> 5              2.002752                  6                  0          396.1881 #> 6              2.052529                  7                  1          259.4803 #> 7              3.032331                  7                  1          259.4803 #> 8              3.051960                  7                  1          259.4803 #> 9              2.948040                  7                  1          259.4803 #> 10             4.000000                  7                  1          259.4803 #>    Axial Line Ref Axial df_1_Depthmap_Ref Axial df_2_Connectivity #> 1               0                       0                       6 #> 2               0                       0                       6 #> 3               0                       0                       6 #> 4               0                       0                       6 #> 5               0                       0                       6 #> 6               1                       1                       7 #> 7               1                       1                       7 #> 8               1                       1                       7 #> 9               1                       1                       7 #> 10              1                       1                       7 #>    Axial df_3_Data_Map_Ref Axial df_4_Line_Length Axial df_row_name #> 1                        0               396.1881                 1 #> 2                        0               396.1881                 1 #> 3                        0               396.1881                 1 #> 4                        0               396.1881                 1 #> 5                        0               396.1881                 1 #> 6                        1               259.4803                 2 #> 7                        1               259.4803                 2 #> 8                        1               259.4803                 2 #> 9                        1               259.4803                 2 #> 10                       1               259.4803                 2 #>    Connectivity Ref Segment Length                       geometry #> 1             4   0      65.799698 LINESTRING (989.1063 -1681.... #> 2             4   1      77.203362 LINESTRING (1049.228 -1654.... #> 3             4   2      90.154808 LINESTRING (1119.769 -1623.... #> 4             4   3      91.088219 LINESTRING (1202.144 -1586.... #> 5             3   4      35.005592 LINESTRING (1285.372 -1549.... #> 6             3   5      69.541687 LINESTRING (1317.357 -1535.... #> 7             5   6      37.176987 LINESTRING (1336.921 -1602.... #> 8             5   7      35.278736 LINESTRING (1347.381 -1638.... #> 9             5   8      34.014023 LINESTRING (1357.306 -1672.... #> 10            6   9       9.775865 LINESTRING (1366.875 -1704...."},{"path":"https://spatialnous.github.io/alcyon/reference/blockLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Block lines on a PointMap — blockLines","title":"Block lines on a PointMap — blockLines","text":"Takes PointMap ShapeMap lines blocks cells PointMap lines pass.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/blockLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Block lines on a PointMap — blockLines","text":"","code":"blockLines(pointMap, lineStringMap, copyMap = TRUE, verbose = FALSE)"},{"path":"https://spatialnous.github.io/alcyon/reference/blockLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Block lines on a PointMap — blockLines","text":"pointMap input PointMap lineStringMap Map lines, either ShapeMap, sf lineString map copyMap Optional. Copy internal sala map verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/blockLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Block lines on a PointMap — blockLines","text":"new PointMap points blocked lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/blockLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Block lines on a PointMap — blockLines","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") lineStringMap <- as(sfMap, \"sf\") mapRegion <- sf::st_bbox(lineStringMap) pointMap <- createGrid(   minX = mapRegion[[\"xmin\"]],   minY = mapRegion[[\"ymin\"]],   maxX = mapRegion[[\"xmax\"]],   maxY = mapRegion[[\"ymax\"]],   gridSize = 0.04 ) blockLines(   pointMap = pointMap,   lineStringMap = lineStringMap[vector()] ) #> stars object with 2 dimensions and 2 attributes #> attribute(s): #>          Min. 1st Qu.  Median         Mean 3rd Qu.    Max. #> Ref         0 2424933 4915267 4.915267e+06 7405601 9830534 #> blocked     0       0       0 3.100319e-02       0       1 #> dimension(s): #>   from  to offset delta x/y #> x    1 151   1.86  0.04 [x] #> y    1 135   6.94 -0.04 [y]"},{"path":"https://spatialnous.github.io/alcyon/reference/connections-AxialShapeGraph-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Axial ShapeGraph connections — connections,AxialShapeGraph-method","title":"Get the Axial ShapeGraph connections — connections,AxialShapeGraph-method","text":"Get Axial ShapeGraph connections","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections-AxialShapeGraph-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Axial ShapeGraph connections — connections,AxialShapeGraph-method","text":"","code":"# S4 method for class 'AxialShapeGraph' connections(map)"},{"path":"https://spatialnous.github.io/alcyon/reference/connections-AxialShapeGraph-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Axial ShapeGraph connections — connections,AxialShapeGraph-method","text":"map Axial ShapeGraph","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections-AxialShapeGraph-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Axial ShapeGraph connections — connections,AxialShapeGraph-method","text":"matrix connected refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections-AxialShapeGraph-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Axial ShapeGraph connections — connections,AxialShapeGraph-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") connections(shapeGraph) #> $from #>   [1]  0  0  0  0  0  0  1  1  1  1  1  1  1  2  2  2  2  2  2  2  3  3  3  3  3 #>  [26]  3  3  3  4  4  4  4  5  5  5  5  5  5  5  5  6  6  6  6  6  6  7  7  7  7 #>  [51]  7  7  8  8  8  8  8  8  8  9  9  9  9  9  9  9  9  9  9 10 10 10 10 10 11 #>  [76] 11 11 11 12 12 12 12 12 12 12 12 12 12 12 12 13 13 13 13 13 13 14 14 14 14 #> [101] 15 15 16 16 16 16 16 16 16 17 17 17 17 17 18 18 18 19 19 19 19 19 19 19 19 #> [126] 19 20 20 20 20 21 21 21 21 22 22 23 23 23 23 24 25 25 25 25 26 26 26 27 27 #> [151] 27 28 28 28 28 29 29 30 30 30 30 31 31 31 32 32 33 33 33 33 34 34 34 34 35 #> [176] 35 35 36 37 37 38 38 38 39 39 40 40 41 41 42 42 42 42 43 43 44 44 44 44 44 #> [201] 45 45 45 45 46 47 47 47 47 48 48 48 48 49 49 50 50 50 50 51 51 51 52 52 52 #> [226] 53 53 53 54 54 55 55 55 56 56 57 #>  #> $to #>   [1]  1  3  6  8 21 24  0  2  4  7 13 20 22  1  3  5  7 26 27 29  0  2  4  5 13 #>  [26] 14 20 22  1  3 31 32  2  3  9 11 12 16 18 36  0  9 14 15 17 19  1  2 10 12 #>  [51] 13 39  0  9 14 17 18 19 40  5  6  8 11 12 16 30 35 37 41  7 12 25 28 42  5 #>  [76]  9 12 23  5  7  9 10 11 16 33 34 35 37 44 46  1  3  7 19 38 49  3  6  8 21 #> [101]  6 17  5  9 12 23 25 45 50  6  8 15 23 30  5  8 38  6  8 13 38 43 47 48 52 #> [126] 53  1  3 31 43  0 14 47 48  1  3 11 16 17 25  0 10 16 23 51  2 27 33  2 26 #> [151] 34 10 42 45 51  2 54  9 17 40 55  4 20 32  4 31 12 26 34 44 12 27 33 44  9 #> [176] 12 56  5  9 12 13 18 19  7 54  8 30  9 56 10 28 44 50 19 20 12 33 34 42 50 #> [201] 16 28 50 51 12 19 21 48 53 19 21 47 52 13 57 16 42 44 45 25 28 45 19 48 55 #> [226] 19 47 55 29 39 30 52 53 35 41 49 #>"},{"path":"https://spatialnous.github.io/alcyon/reference/connections-PointMap-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the PointMap connections — connections,PointMap-method","title":"Get the PointMap connections — connections,PointMap-method","text":"Get PointMap connections","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections-PointMap-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the PointMap connections — connections,PointMap-method","text":"","code":"# S4 method for class 'PointMap' connections(map)"},{"path":"https://spatialnous.github.io/alcyon/reference/connections-PointMap-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the PointMap connections — connections,PointMap-method","text":"map PointMap","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections-PointMap-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the PointMap connections — connections,PointMap-method","text":"matrix connected refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections-PointMap-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the PointMap connections — connections,PointMap-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"gallery\",     \"gallery_lines.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.04,     fillX = 3.01,     fillY = 6.7,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) # plot the first 100 connections only head(connections(pointMap), 100) #>         from      to #>   [1,] 65592  131128 #>   [2,] 65592  196664 #>   [3,] 65592  262200 #>   [4,] 65592  327736 #>   [5,] 65592  393272 #>   [6,] 65592  458808 #>   [7,] 65592  524344 #>   [8,] 65592  589880 #>   [9,] 65592  655416 #>  [10,] 65592  720952 #>  [11,] 65592  786488 #>  [12,] 65592  327737 #>  [13,] 65592  393273 #>  [14,] 65592  458809 #>  [15,] 65592  524345 #>  [16,] 65592  589881 #>  [17,] 65592  655417 #>  [18,] 65592  720953 #>  [19,] 65592  786489 #>  [20,] 65592  589882 #>  [21,] 65592  655418 #>  [22,] 65592  720954 #>  [23,] 65592  786490 #>  [24,] 65592  852027 #>  [25,] 65592  917563 #>  [26,] 65592  983099 #>  [27,] 65592 1048635 #>  [28,] 65592 1114171 #>  [29,] 65592 1179707 #>  [30,] 65592 1114172 #>  [31,] 65592 1179708 #>  [32,] 65592 1245244 #>  [33,] 65592  196665 #>  [34,] 65592  262201 #>  [35,] 65592  327738 #>  [36,] 65592  393274 #>  [37,] 65592  458810 #>  [38,] 65592  524346 #>  [39,] 65592  458811 #>  [40,] 65592  524347 #>  [41,] 65592  589883 #>  [42,] 65592  655419 #>  [43,] 65592  720955 #>  [44,] 65592  786491 #>  [45,] 65592  524348 #>  [46,] 65592  589884 #>  [47,] 65592  655420 #>  [48,] 65592  720956 #>  [49,] 65592  786492 #>  [50,] 65592  655421 #>  [51,] 65592  720957 #>  [52,] 65592  786493 #>  [53,] 65592  262202 #>  [54,] 65592  327739 #>  [55,] 65592  393275 #>  [56,] 65592  393276 #>  [57,] 65592  458812 #>  [58,] 65592  458813 #>  [59,] 65592  524349 #>  [60,] 65592  589885 #>  [61,] 65592  131129 #>  [62,] 65592  196666 #>  [63,] 65592  262203 #>  [64,] 65592  327740 #>  [65,] 65592  393277 #>  [66,] 65592  196667 #>  [67,] 65592  262204 #>  [68,] 65592  262205 #>  [69,] 65592  327741 #>  [70,] 65592  131130 #>  [71,] 65592  131131 #>  [72,] 65592  196668 #>  [73,] 65592  196669 #>  [74,] 65592  196670 #>  [75,] 65592  196671 #>  [76,] 65592  262208 #>  [77,] 65592  262209 #>  [78,] 65592  262210 #>  [79,] 65592  262211 #>  [80,] 65592  327746 #>  [81,] 65592  327747 #>  [82,] 65592  327748 #>  [83,] 65592  131132 #>  [84,] 65592  131133 #>  [85,] 65592  196672 #>  [86,] 65592  262212 #>  [87,] 65592   65593 #>  [88,] 65592   65594 #>  [89,] 65592   65595 #>  [90,] 65592   65596 #>  [91,] 65592   65597 #>  [92,] 65593  131129 #>  [93,] 65593  196665 #>  [94,] 65593  262201 #>  [95,] 65593  327737 #>  [96,] 65593  393273 #>  [97,] 65593  458809 #>  [98,] 65593  524345 #>  [99,] 65593  589881 #> [100,] 65593  655417"},{"path":"https://spatialnous.github.io/alcyon/reference/connections-SegmentShapeGraph-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Segment ShapeGraph connections — connections,SegmentShapeGraph-method","title":"Get the Segment ShapeGraph connections — connections,SegmentShapeGraph-method","text":"Get Segment ShapeGraph connections","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections-SegmentShapeGraph-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Segment ShapeGraph connections — connections,SegmentShapeGraph-method","text":"","code":"# S4 method for class 'SegmentShapeGraph' connections(map)"},{"path":"https://spatialnous.github.io/alcyon/reference/connections-SegmentShapeGraph-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Segment ShapeGraph connections — connections,SegmentShapeGraph-method","text":"map Segment ShapeGraph","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections-SegmentShapeGraph-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Segment ShapeGraph connections — connections,SegmentShapeGraph-method","text":"matrix connected refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections-SegmentShapeGraph-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Segment ShapeGraph connections — connections,SegmentShapeGraph-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_segment_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"SegmentShapeGraph\") connections(shapeGraph) #> $backward #>   [1] 0 0 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 1 1 0 0 1 1 0 0 0 1 1 0 0 0 #>  [38] 1 1 1 0 1 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 0 1 1 0 1 1 1 0 0 1 1 0 #>  [75] 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 0 0 1 #> [112] 1 0 0 1 1 1 0 0 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 0 1 1 0 1 #> [149] 0 0 1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 1 #> [186] 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 1 #> [223] 0 0 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 0 1 1 0 1 0 0 1 0 0 1 0 1 1 #> [260] 0 0 0 1 0 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 #> [297] 1 1 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 #> [334] 0 1 1 1 0 0 1 0 0 1 1 0 0 0 1 1 0 1 1 1 0 0 1 0 0 1 1 0 1 1 0 0 1 1 0 0 1 #> [371] 1 0 1 1 0 0 0 1 0 0 0 1 1 1 0 1 1 1 0 0 0 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 0 #> [408] 1 1 0 0 0 1 1 0 0 1 1 1 0 0 0 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 0 1 0 0 1 1 #> [445] 0 1 1 1 1 0 0 0 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 1 1 1 0 0 0 1 0 0 1 1 1 0 #> [482] 0 1 1 0 0 0 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 0 1 #> [519] 1 0 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 0 0 1 1 0 0 1 1 1 0 0 #> [556] 1 0 0 0 0 0 0 1 1 1 1 0 0 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 1 0 0 1 1 0 0 0 1 #> [593] 1 0 0 1 1 1 0 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 0 1 1 #> [630] 0 0 1 1 1 0 0 1 1 1 1 0 0 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 0 0 0 1 1 0 0 1 1 #> [667] 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 0 1 0 1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 1 0 1 1 #> [704] 0 1 0 #>  #> $direction #>   [1]  1  1  1  1 -1 -1  1  1  1 -1 -1  1  1 -1  1  1 -1  1  1 -1 -1  1 -1 -1 -1 #>  [26]  1 -1 -1 -1  1 -1  1 -1 -1  1 -1  1 -1 -1  1 -1 -1 -1  1  1 -1 -1  1  1  1 #>  [51] -1 -1  1 -1 -1  1  1  1 -1 -1  1 -1  1 -1  1 -1 -1 -1  1  1 -1 -1  1  1  1 #>  [76] -1 -1  1 -1  1 -1  1  1 -1  1 -1 -1  1  1 -1  1 -1 -1  1  1 -1 -1 -1  1 -1 #> [101]  1 -1 -1  1  1 -1  1 -1  1  1 -1  1 -1  1 -1  1 -1  1 -1  1  1 -1 -1 -1  1 #> [126]  1 -1 -1 -1  1  1 -1  1  1  1  1  1 -1  1  1  1 -1  1  1 -1  1  1 -1  1 -1 #> [151] -1  1  1 -1 -1 -1 -1  1  1 -1 -1 -1  1  1 -1  1 -1 -1 -1  1 -1  1 -1 -1  1 #> [176]  1 -1  1 -1 -1  1  1 -1 -1  1  1 -1  1 -1  1  1 -1  1 -1 -1  1 -1  1 -1 -1 #> [201]  1  1 -1  1 -1  1 -1  1  1 -1 -1  1  1  1 -1  1 -1  1 -1  1 -1  1  1 -1 -1 #> [226] -1  1  1 -1 -1  1  1 -1  1  1 -1  1 -1  1 -1 -1 -1 -1 -1 -1  1 -1  1  1 -1 #> [251] -1  1 -1 -1  1 -1  1 -1 -1  1 -1  1 -1  1  1 -1 -1  1  1  1 -1  1  1 -1  1 #> [276] -1  1  1 -1 -1 -1  1  1  1 -1 -1 -1  1  1 -1  1 -1 -1  1  1  1 -1 -1 -1  1 #> [301]  1 -1  1 -1  1  1 -1  1 -1 -1 -1  1 -1  1 -1  1 -1  1 -1  1  1 -1 -1  1 -1 #> [326]  1 -1  1 -1 -1  1  1  1  1 -1  1 -1  1  1 -1  1  1 -1  1  1 -1  1 -1  1 -1 #> [351] -1 -1  1  1 -1 -1  1  1 -1 -1  1  1 -1  1 -1 -1  1 -1  1 -1 -1  1 -1  1  1 #> [376] -1  1 -1  1 -1  1 -1 -1  1  1 -1 -1  1 -1  1  1 -1  1 -1 -1  1 -1  1  1 -1 #> [401] -1 -1  1 -1  1  1 -1 -1  1 -1  1  1 -1 -1 -1  1 -1  1 -1 -1  1  1 -1  1  1 #> [426]  1 -1  1 -1 -1  1 -1  1 -1  1 -1  1  1  1 -1  1  1  1 -1 -1 -1  1 -1  1 -1 #> [451]  1  1 -1  1  1 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1  1 -1 -1 -1  1 -1  1  1  1 #> [476] -1  1 -1  1 -1  1  1 -1  1  1 -1  1 -1  1 -1  1 -1 -1  1  1 -1  1 -1  1  1 #> [501] -1  1  1  1 -1  1 -1 -1  1 -1  1  1 -1 -1  1 -1  1 -1 -1  1  1 -1  1  1 -1 #> [526]  1 -1  1 -1  1  1 -1  1 -1 -1  1 -1 -1 -1  1  1  1  1 -1  1  1 -1  1 -1  1 #> [551] -1  1 -1 -1  1 -1 -1  1 -1  1  1  1 -1  1 -1 -1  1  1 -1  1 -1  1  1 -1 -1 #> [576]  1 -1 -1  1 -1  1  1 -1  1  1 -1 -1  1 -1  1  1 -1 -1 -1  1 -1  1 -1  1  1 #> [601] -1  1  1 -1 -1  1  1 -1  1 -1  1  1 -1  1 -1  1  1 -1  1 -1 -1  1  1 -1  1 #> [626] -1  1 -1  1  1  1 -1 -1  1 -1  1  1 -1 -1  1  1 -1 -1  1 -1 -1 -1 -1  1  1 #> [651] -1  1 -1 -1 -1 -1  1 -1  1  1 -1  1 -1  1 -1  1 -1 -1  1 -1 -1 -1  1 -1  1 #> [676] -1  1 -1 -1 -1  1  1  1  1 -1  1 -1 -1  1  1 -1 -1 -1  1 -1  1 -1  1  1 -1 #> [701]  1  1 -1  1 -1 -1 #>  #> $from #>   [1]   0   0   0   1   1   1   1   2   2   2   2   3   3   3   3   4   4   4 #>  [19]   5   5   5   6   6   6   6   7   7   7   7   8   8   8   8   8   9   9 #>  [37]   9   9   9   9  10  10  10  10  11  11  11  11  12  12  12  12  13  13 #>  [55]  13  13  14  14  14  14  15  15  15  15  15  16  16  16  16  17  17  17 #>  [73]  17  18  18  18  18  19  19  19  19  19  20  20  20  20  20  20  21  21 #>  [91]  21  21  21  21  22  22  22  22  22  23  23  23  23  24  24  24  24  25 #> [109]  25  25  25  25  26  26  26  26  26  27  27  27  28  28  28  28  29  29 #> [127]  29  29  30  30  30  30  31  31  31  32  32  32  32  33  33  33  33  34 #> [145]  34  34  35  35  36  36  36  36  37  37  37  37  38  38  38  38  38  39 #> [163]  39  39  39  39  39  40  40  40  40  41  41  41  41  42  42  42  42  42 #> [181]  43  43  43  43  43  44  44  44  44  44  45  45  45  45  45  45  46  46 #> [199]  46  46  46  47  47  47  47  47  48  48  48  48  48  48  49  49  49  49 #> [217]  49  50  50  50  50  50  51  51  51  51  51  52  52  52  53  53  53  53 #> [235]  54  54  54  54  55  55  55  55  56  56  56  57  57  57  58  58  59  59 #> [253]  59  60  60  60  61  61  61  62  62  62  62  63  63  63  63  63  64  64 #> [271]  64  64  65  65  65  65  65  66  66  66  66  66  67  67  67  67  68  68 #> [289]  68  68  69  69  69  69  70  70  70  70  71  71  71  71  71  72  72  72 #> [307]  72  72  72  73  73  73  73  74  74  74  74  74  75  75  75  75  75  75 #> [325]  76  76  76  76  76  77  77  77  77  78  78  78  78  79  79  79  80  80 #> [343]  80  80  81  81  81  81  81  82  82  82  82  83  83  83  84  84  84  84 #> [361]  85  85  85  86  86  86  86  87  87  87  87  88  88  88  89  89  89  89 #> [379]  90  90  90  90  90  90  91  91  91  91  92  92  92  92  93  93  93  93 #> [397]  93  94  94  94  94  95  95  95  95  96  96  96  96  97  97  97  97  97 #> [415]  98  98  98  98  98  99  99  99  99  99 100 100 100 100 100 101 101 101 #> [433] 101 102 102 102 102 103 103 103 104 104 104 104 105 105 105 106 106 107 #> [451] 107 107 107 107 108 108 108 108 108 109 109 109 110 110 110 110 110 111 #> [469] 111 111 111 112 112 112 112 113 113 113 113 113 114 114 114 114 115 115 #> [487] 115 115 115 116 116 116 116 116 117 117 117 118 118 118 118 118 119 119 #> [505] 119 119 119 120 120 120 120 121 121 121 121 122 122 122 122 123 123 124 #> [523] 124 124 124 125 125 125 125 125 126 126 126 126 126 126 127 127 127 127 #> [541] 128 128 128 129 129 129 129 129 130 130 130 130 130 131 131 131 132 132 #> [559] 133 133 133 134 134 134 134 135 136 136 136 136 137 137 137 137 138 138 #> [577] 138 139 139 139 139 140 140 140 141 141 141 141 142 142 142 142 142 143 #> [595] 143 143 143 143 144 144 145 145 145 145 146 146 146 146 146 147 147 147 #> [613] 147 147 147 148 148 148 148 148 149 149 149 149 150 150 150 150 150 151 #> [631] 151 151 151 151 152 152 152 152 153 153 154 154 154 154 155 155 155 156 #> [649] 156 156 157 157 157 157 158 158 158 159 159 159 159 159 160 160 160 160 #> [667] 160 161 161 161 161 162 162 162 162 163 163 163 163 164 164 164 164 165 #> [685] 165 165 165 166 166 166 166 167 167 167 167 168 168 169 169 169 170 170 #> [703] 170 171 171 172 #>  #> $ss_weight #>   [1] 0 1 0 0 1 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 0 0 1 #>  [38] 0 0 1 1 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0 #>  [75] 0 0 1 0 1 0 0 1 0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 1 0 0 1 0 1 0 1 1 0 0 0 #> [112] 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 #> [149] 0 1 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 #> [186] 0 1 0 0 0 0 1 0 0 0 1 1 0 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 #> [223] 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 #> [260] 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 0 0 #> [297] 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 1 0 0 0 #> [334] 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0 #> [371] 0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 1 #> [408] 1 0 1 0 0 0 0 1 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 0 #> [445] 1 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 1 0 0 1 0 1 0 0 0 #> [482] 1 0 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 #> [519] 0 0 0 1 0 1 0 0 0 1 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 0 1 0 #> [556] 0 1 0 1 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 1 0 1 0 1 0 0 0 1 0 1 0 1 1 0 0 0 #> [593] 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 1 #> [630] 0 0 0 0 1 1 0 1 0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 1 0 1 1 0 0 1 0 0 0 0 1 #> [667] 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 #> [704] 0 0 1 #>  #> $to #>   [1]   1  99  31   2  46   0  99   3  17   1  46   4 106   2  17   5   3 106 #>  [19]   6 102   4   7  26   5 102   8  98   6  26   9  72  73   7  98  10  39 #>  [37]  40   8  72  73  16   9  39  40  12  23  29  30  13 110  11  23  14 113 #>  [55]  12 110  15 117  13 113  16  38  39  14 117  10  15  38  39  18  76   2 #>  [73]   3  19 102  17  76  20  25  26  18 102  21  97  98  19  25  26  22  71 #>  [91]  72  20  97  98  23  30  21  71  72  11  12  22  30  25 121 123 124  19 #> [109]  20  26  24 121   6   7  19  20  25  28 132  77  29  87  27 132  11  30 #> [127]  28  87  22  23  11  29  32  74   0  33  88  31  74  34  47  32  88  35 #> [145]  33  47  83  34  37  68  53  54  38 138  36  68  15  16  39  37 138   9 #> [163]  10  40  15  16  38  73   9  10  39  42 139  84  85  43  48  49  41 139 #> [181]  44  86  42  48  49  45  92  93  43  86  46  75  76  44  92  93   1   2 #> [199]  45  75  76  48 118 119  33  34  42  43  49  47 118 119  50 140  42  43 #> [217]  48  51 133 134  49 140  52 131  50 133 134  60  51 131  36  54  67  68 #> [235]  55 116  36  53  56 143  54 116 109  55 143  58 103 104  59  57  60  61 #> [253]  58  59  61  52  62  59  60  63  77  78  61  64 153  62  77  78  65 125 #> [271]  63 153  66 147 148  64 125  67 130  65 147 148  53  68  66 130  36  37 #> [289]  53  67  70  95 136 137  71 158  69  95  21  22  72  70 158   8   9  73 #> [307]  21  22  71  40   8   9  72  75  99 100  31  32  45  46  76  74  99 100 #> [325]  17  18  45  46  75  62  63  78  27  79  62  63  77  80 150  78  81 159 #> [343]  79 150  82 107 108  80 159 105  81 107 108  84 120  35  41  85  83 120 #> [361] 103  41  84  87 137  43  44  28  29  86 137  89  32  33  90 164 165  88 #> [379]  91 166 167  89 164 165  92  90 166 167  44  45  93  91  94 145  44  45 #> [397]  92  95 136  93 145  69  70  94 136  97 122 144 145  20  21  98  96 122 #> [415]   7   8  20  21  97  74  75 100   0   1 101 154  74  75  99 156 157 100 #> [433] 154   5   6  18  19  57 104  85 105 107  57 103  82 104 107   3   4  81 #> [451]  82 108 104 105 109 163  81  82 107  56 108 163 111 112 113  12  13 127 #> [469] 110 112 113 110 111 113 128  13  14 110 111 112 115 162 151 152 116 142 #> [487] 143 114 162  54  55 115 142 143 168  14  15  47  48 119 169 170 120 139 #> [505]  47  48 118  83  84 119 139 122 124  24  25  96  97 121 124  24 124 121 #> [523] 122  24 123 126 146 147  64  65 127 129 130 125 146 147 111 126 129 130 #> [541] 129 146 112 126 127 130 128 146  66  67 126 127 129  51  52 171  27  28 #> [559]  50  51 134 135  50  51 133 134  69 137  94  95  86  87  69 136  37  38 #> [577] 168  41  42 119 120 171  49  50 142 161 148 149 115 116 143 141 161  55 #> [595]  56 115 116 142  96 145  93  94  96 144 125 126 147 128 129  65  66 148 #> [613] 125 126 146 141 149  65  66 147 160 161 141 148 151 159 160  79  80 114 #> [631] 152 150 159 160 162 163 114 151  63  64 155 157 100 101 167 154 157 101 #> [649] 157 164 154 155 101 156 172  70  71 150 151 160  80  81 149 161 150 151 #> [667] 159 141 142 149 160 152 163 114 115 108 109 152 162  89  90 165 156 169 #> [685]  89  90 164  90  91 167 170 155  90  91 166 138 117 118 170 165 166 118 #> [703] 169 131 140 158 #>"},{"path":"https://spatialnous.github.io/alcyon/reference/connections.html","id":null,"dir":"Reference","previous_headings":"","what":"Get map connections — connections","title":"Get map connections — connections","text":"Get map connections","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get map connections — connections","text":"","code":"connections(map)"},{"path":"https://spatialnous.github.io/alcyon/reference/connections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get map connections — connections","text":"map sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/connections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get map connections — connections","text":"matrix connected refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/createGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a PointMap through a grid — createGrid","title":"Create a PointMap through a grid — createGrid","text":"Create PointMap grid","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/createGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a PointMap through a grid — createGrid","text":"","code":"createGrid(minX, minY, maxX, maxY, gridSize, verbose = FALSE)"},{"path":"https://spatialnous.github.io/alcyon/reference/createGrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a PointMap through a grid — createGrid","text":"minX Minimum X bounding region minY Minimum Y bounding region maxX Maximum X bounding region maxY Maximum Y bounding region gridSize Size cells verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/createGrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a PointMap through a grid — createGrid","text":"new PointMap","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/createGrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a PointMap through a grid — createGrid","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") lineStringMap <- as(sfMap, \"sf\") mapRegion <- sf::st_bbox(lineStringMap) createGrid(   minX = mapRegion[[\"xmin\"]],   minY = mapRegion[[\"ymin\"]],   maxX = mapRegion[[\"xmax\"]],   maxY = mapRegion[[\"ymax\"]],   gridSize = 0.04 ) #> stars object with 2 dimensions and 1 attribute #> attribute(s): #>      Min. 1st Qu.  Median    Mean 3rd Qu.    Max. #> Ref     0 2424933 4915267 4915267 7405601 9830534 #> dimension(s): #>   from  to offset delta x/y #> x    1 151   1.86  0.04 [x] #> y    1 135   6.94 -0.04 [y]"},{"path":"https://spatialnous.github.io/alcyon/reference/fillGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill a PointMap's grid starting from one or more points — fillGrid","title":"Fill a PointMap's grid starting from one or more points — fillGrid","text":"Fill PointMap's grid starting one points","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/fillGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill a PointMap's grid starting from one or more points — fillGrid","text":"","code":"fillGrid(pointMap, fillX, fillY, copyMap = TRUE, verbose = FALSE)"},{"path":"https://spatialnous.github.io/alcyon/reference/fillGrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill a PointMap's grid starting from one or more points — fillGrid","text":"pointMap input PointMap fillX X coordinate fill points fillY Y coordinate fill points copyMap Optional. Copy internal sala map verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/fillGrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill a PointMap's grid starting from one or more points — fillGrid","text":"new PointMap filled points","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/fillGrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill a PointMap's grid starting from one or more points — fillGrid","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") lineStringMap <- as(sfMap, \"sf\") mapRegion <- sf::st_bbox(lineStringMap) pointMap <- createGrid(   minX = mapRegion[[\"xmin\"]],   minY = mapRegion[[\"ymin\"]],   maxX = mapRegion[[\"xmax\"]],   maxY = mapRegion[[\"ymax\"]],   gridSize = 0.04 ) pointMap <- blockLines(   pointMap = pointMap,   lineStringMap = lineStringMap[vector()] ) fillGrid(   pointMap = pointMap,   fillX = 3.01,   fillY = 6.7 ) #> stars object with 2 dimensions and 4 attributes #> attribute(s): #>                Min. 1st Qu.  Median         Mean 3rd Qu.    Max. #> Ref               0 2424933 4915267 4.915267e+06 7405601 9830534 #> blocked           0       0       0 3.100319e-02       0       1 #> contextfilled     0       0       0 0.000000e+00       0       0 #> filled            0       0       1 7.347069e-01       1       1 #> dimension(s): #>   from  to offset delta x/y #> x    1 151   1.86  0.04 [x] #> y    1 135   6.94 -0.04 [y]"},{"path":"https://spatialnous.github.io/alcyon/reference/getTopFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract top x percent of features — getTopFeatures","title":"Extract top x percent of features — getTopFeatures","text":"Sorts features specific column extracts top x percent","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/getTopFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract top x percent of features — getTopFeatures","text":"","code":"getTopFeatures(lineStringMap, column, percent)"},{"path":"https://spatialnous.github.io/alcyon/reference/getTopFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract top x percent of features — getTopFeatures","text":"lineStringMap sf lineString map column column use extract features percent Percentage features (total) extract","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/getTopFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract top x percent of features — getTopFeatures","text":"lineString map filtered sorted","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/getTopFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract top x percent of features — getTopFeatures","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") shapeGraph <- allToAllTraverse(   shapeGraph,   traversalType = TraversalType$Topological,   radii = c(\"n\", \"3\"),   includeBetweenness = TRUE ) getTopFeatures(shapeGraph, \"Connectivity\", 0.1) #> Simple feature collection with 6 features and 28 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 973 ymin: -2058 xmax: 1359 ymax: -1581 #> CRS:           NA #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 17           16            7           16    213.8832 #> 4             3            8            3    210.3450 #> 6             5            8            5    145.4648 #> 20           19            9           19    226.0022 #> 10            9           10            9    273.1483 #> 13           12           12           12    193.4942 #>                          geometry Data Map Ref Line Length Choice Choice R3 #> 17 LINESTRING (1236 -1847, 127...           16    213.8831    274       107 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450    454       161 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648    511       220 #> 20 LINESTRING (973 -1752, 1199...           19    226.0022    472       184 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483    654       255 #> 13 LINESTRING (1167 -1874, 135...           12    193.4942    659       326 #>    Choice [Norm] Choice [Norm] R3  Entropy Entropy R3 Harmonic Mean Depth #> 17     0.1716792        0.1080808 1.973692   1.460506            5.223067 #> 4      0.2844611        0.1214178 1.758874   1.463609           14.419703 #> 6      0.3201754        0.1659125 1.731490   1.433642           14.256503 #> 20     0.2957394        0.2358974 2.044582   1.536169            5.368661 #> 10     0.4097744        0.1923077 1.864475   1.511067            4.842767 #> 13     0.4129073        0.3015726 1.941796   1.550662           20.000000 #>    Harmonic Mean Depth R3 Integration [HH] Integration [HH] R3 #> 17               16.04494         2.105129            2.527273 #> 4                18.51018         2.361852            2.543419 #> 6                18.11097         2.548314            2.793591 #> 20               16.57253         1.936718            2.447779 #> 10               20.46512         2.482972            2.748533 #> 13               20.00000         2.420898            2.956538 #>    Integration [P-value] Integration [P-value] R3 Integration [Tekl] #> 17              2.105129                 2.527273          0.7369218 #> 4               2.361852                 2.543419          0.7561645 #> 6               2.548314                 2.793591          0.7694319 #> 20              1.936718                 2.447779          0.7235790 #> 10              2.482972                 2.748533          0.7648444 #> 13              2.420898                 2.956538          0.7604254 #>    Integration [Tekl] R3 Intensity Intensity R3 Mean Depth Mean Depth R3 #> 17             0.7713465  1.257958     1.244135   2.614035      2.222222 #> 4              0.7702533  1.259441     1.175322   2.438596      2.288461 #> 6              0.7878321  1.339019     1.266384   2.333333      2.173077 #> 20             0.7673109  1.197836     1.340062   2.754386      2.200000 #> 10             0.7847281  1.404410     1.312894   2.368421      2.192308 #> 13             0.8015020  1.425622     1.519016   2.403509      2.063830 #>    Node Count Node Count R3 Relativised Entropy Relativised Entropy R3 #> 17         58            46            1.641994               1.710227 #> 4          58            53            1.662805               1.783778 #> 6          58            53            1.593437               1.692109 #> 20         58            41            1.723361               1.641913 #> 10         58            53            1.526621               1.657888 #> 13         58            48            1.524789               1.500373"},{"path":"https://spatialnous.github.io/alcyon/reference/isovist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create isovists at point and direction angle — isovist","title":"Create isovists at point and direction angle — isovist","text":"Create one isovists particular points, given angle field view","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/isovist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create isovists at point and direction angle — isovist","text":"","code":"isovist(boundaryMap, x, y, angle = NA, viewAngle = NA, verbose = FALSE)"},{"path":"https://spatialnous.github.io/alcyon/reference/isovist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create isovists at point and direction angle — isovist","text":"boundaryMap ShapeMap lines designating isovist boundaries x X coordinate origin points y Y coordinate origin points angle angle (X axis) isovist look direction viewAngle angle signifying isovist's field view verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/isovist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create isovists at point and direction angle — isovist","text":"ShapeMap isovist polygons","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/isovist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create isovists at point and direction angle — isovist","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") isovist(   shapeMap,   x = c(3.01, 1.3),   y = c(6.70, 5.2),   angle = 0.01,   viewAngle = 3.14,   FALSE ) #> Simple feature collection with 2 features and 9 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 1.888668 ymin: 1.544019 xmax: 7.89713 ymax: 6.908548 #> CRS:           NA #>    Isovist Area Isovist Compactness Isovist Drift Angle Isovist Drift Magnitude #> 1  1.665612e+01        4.293649e-01            311.8469                2.771847 #> 2 -1.776357e-15       -1.951463e-16            253.0725                9.616652 #>   Isovist Max Radial Isovist Min Radial Isovist Occlusivity Isovist Perimeter #> 1           6.002915          0.0000000            7.716775          22.07896 #> 2           3.686368          0.5886679            5.347612          10.69522 #>   Ref                       geometry #> 1   0 POLYGON ((7.8825 6.908548, ... #> 2   1 POLYGON ((1.888668 6.908548..."},{"path":"https://spatialnous.github.io/alcyon/reference/isovist2pts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create isovists using two points — isovist2pts","title":"Create isovists using two points — isovist2pts","text":"Create one isovists particular points, given another point direction angle field view","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/isovist2pts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create isovists using two points — isovist2pts","text":"","code":"isovist2pts(boundaryMap, x, y, toX, toY, viewAngle, verbose = FALSE)"},{"path":"https://spatialnous.github.io/alcyon/reference/isovist2pts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create isovists using two points — isovist2pts","text":"boundaryMap ShapeMap lines designating isovist boundaries x X coordinate origin points y Y coordinate origin points toX X coordinate target points toY Y coordinate target points viewAngle angle signifying isovist's field view verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/isovist2pts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create isovists using two points — isovist2pts","text":"ShapeMap isovist polygons","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/isovist2pts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create isovists using two points — isovist2pts","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") isovist2pts(   shapeMap,   x = c(3.01, 1.3),   y = c(6.70, 5.2),   toX = c(3.40, 1.1),   toY = c(6.50, 5.6),   viewAngle = 3.14,   FALSE ) #> Simple feature collection with 2 features and 9 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 1.3 ymin: 1.544019 xmax: 7.89713 ymax: 6.908548 #> CRS:           NA #>   Isovist Area Isovist Compactness Isovist Drift Angle Isovist Drift Magnitude #> 1   21.3243446           0.4878067           300.27298               2.6501689 #> 2    0.4160788           0.6541165            59.55943               0.7745971 #>   Isovist Max Radial Isovist Min Radial Isovist Occlusivity Isovist Perimeter #> 1           6.002915                  0            5.059755         23.437910 #> 2           1.807116                  0            1.413628          2.827256 #>   Ref                       geometry #> 1   0 POLYGON ((7.8825 6.908548, ... #> 2   1 POLYGON ((1.888668 6.908548..."},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords-AxialShapeGraph-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Link two Axial Lines (coordinates) — linkCoords,AxialShapeGraph-method","title":"Link two Axial Lines (coordinates) — linkCoords,AxialShapeGraph-method","text":"Link two locations Axial ShapeGraph using point coordinates","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords-AxialShapeGraph-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link two Axial Lines (coordinates) — linkCoords,AxialShapeGraph-method","text":"","code":"# S4 method for class 'AxialShapeGraph' linkCoords(map, fromX, fromY, toX, toY, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords-AxialShapeGraph-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link two Axial Lines (coordinates) — linkCoords,AxialShapeGraph-method","text":"map Axial ShapeGraph fromX X coordinate first link point fromY Y coordinate first link point toX X coordinate second link point toY Y coordinate second link point copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords-AxialShapeGraph-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link two Axial Lines (coordinates) — linkCoords,AxialShapeGraph-method","text":"new Axial ShapeGraph linked lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords-AxialShapeGraph-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Link two Axial Lines (coordinates) — linkCoords,AxialShapeGraph-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") linkCoords(shapeGraph, 982.8, -1620.3, 1217.1, -1977.3) #> Simple feature collection with 58 features and 6 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 1             0            6            0    396.1881 #> 2             1            7            1    259.4803 #> 3             2            7            2    244.4770 #> 4             3            8            3    210.3450 #> 5             4            4            4    375.4797 #> 6             5            8            5    145.4648 #> 7             6            6            6    596.2349 #> 8             7            6            7    205.1829 #> 9             8            7            8    385.0117 #> 10            9           10            9    273.1483 #>                          geometry Data Map Ref Line Length #> 1  LINESTRING (984 -1684, 1346...            0    396.1881 #> 2  LINESTRING (1306 -1497, 137...            1    259.4803 #> 3  LINESTRING (1257 -1772, 149...            2    244.4770 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450 #> 5  LINESTRING (1174 -1684, 153...            4    375.4797 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648 #> 7  LINESTRING (946 -1386, 1032...            6    596.2349 #> 8  LINESTRING (1350 -1896, 137...            7    205.1828 #> 9  LINESTRING (1117 -1979, 112...            8    385.0117 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483"},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords-PointMap-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Link two PointMap Cells (coordinates) — linkCoords,PointMap-method","title":"Link two PointMap Cells (coordinates) — linkCoords,PointMap-method","text":"Link two cells PointMap using point coordinates","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords-PointMap-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link two PointMap Cells (coordinates) — linkCoords,PointMap-method","text":"","code":"# S4 method for class 'PointMap' linkCoords(map, fromX, fromY, toX, toY, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords-PointMap-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link two PointMap Cells (coordinates) — linkCoords,PointMap-method","text":"map PointMap fromX X coordinate first link point fromY Y coordinate first link point toX X coordinate second link point toY Y coordinate second link point copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords-PointMap-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link two PointMap Cells (coordinates) — linkCoords,PointMap-method","text":"new PointMap linked points","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords-PointMap-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Link two PointMap Cells (coordinates) — linkCoords,PointMap-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"gallery\",     \"gallery_lines.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.04,     fillX = 3.01,     fillY = 6.7,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) linkCoords(pointMap, 1.74, 6.7, 5.05, 5.24) #> stars object with 2 dimensions and 7 attributes #> attribute(s): #>                           Min.      1st Qu.       Median         Mean #> Ref                  0.0000000 1835064.7500 3.735590e+06 3.735590e+06 #> Connectivity         9.0000000     107.0000 1.790000e+02 2.048587e+02 #> Point First Moment   0.6780338      30.5024 7.556305e+01 1.097780e+02 #> Point Second Moment  0.0560000      12.0508 4.336080e+01 1.115533e+02 #> blocked              0.0000000       0.0000 0.000000e+00 1.989703e-01 #> contextfilled        0.0000000       0.0000 0.000000e+00 0.000000e+00 #> filled               0.0000000       0.0000 0.000000e+00 4.956522e-01 #>                           3rd Qu.         Max. NA's #> Ref                  5636114.2500 7471179.0000    0 #> Connectivity             284.0000     624.0000 4408 #> Point First Moment       149.7499     619.3036 4408 #> Point Second Moment      105.2376    1218.8016 4408 #> blocked                    0.0000       1.0000    0 #> contextfilled              0.0000       0.0000    0 #> filled                     1.0000       1.0000    0 #> dimension(s): #>   from  to offset delta x/y #> x    1 115   0.62  0.04 [x] #> y    1  76   7.82 -0.04 [y]"},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords.html","id":null,"dir":"Reference","previous_headings":"","what":"Link map points/lines as if selecting them using points — linkCoords","title":"Link map points/lines as if selecting them using points — linkCoords","text":"Link map points/lines selecting using points","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link map points/lines as if selecting them using points — linkCoords","text":"","code":"linkCoords(map, fromX, fromY, toX, toY, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link map points/lines as if selecting them using points — linkCoords","text":"map sala map fromX X coordinate origin point fromY Y coordinate origin point toX X coordinate target point toY Y coordinate target point copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkCoords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link map points/lines as if selecting them using points — linkCoords","text":"new map linked points/lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs-AxialShapeGraph-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Link two Axial Lines (refs) — linkRefs,AxialShapeGraph-method","title":"Link two Axial Lines (refs) — linkRefs,AxialShapeGraph-method","text":"Link two lines Axial ShapeGraph using refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs-AxialShapeGraph-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link two Axial Lines (refs) — linkRefs,AxialShapeGraph-method","text":"","code":"# S4 method for class 'AxialShapeGraph' linkRefs(map, fromRef, toRef, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs-AxialShapeGraph-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link two Axial Lines (refs) — linkRefs,AxialShapeGraph-method","text":"map Axial ShapeGraph fromRef Ref first link line toRef Ref second link line copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs-AxialShapeGraph-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link two Axial Lines (refs) — linkRefs,AxialShapeGraph-method","text":"new Axial ShapeGraph linked lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs-AxialShapeGraph-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Link two Axial Lines (refs) — linkRefs,AxialShapeGraph-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") linkRefs(shapeGraph, 0L, 9L) #> Simple feature collection with 58 features and 6 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 1             0            6            0    396.1881 #> 2             1            7            1    259.4803 #> 3             2            7            2    244.4770 #> 4             3            8            3    210.3450 #> 5             4            4            4    375.4797 #> 6             5            8            5    145.4648 #> 7             6            6            6    596.2349 #> 8             7            6            7    205.1829 #> 9             8            7            8    385.0117 #> 10            9           10            9    273.1483 #>                          geometry Data Map Ref Line Length #> 1  LINESTRING (984 -1684, 1346...            0    396.1881 #> 2  LINESTRING (1306 -1497, 137...            1    259.4803 #> 3  LINESTRING (1257 -1772, 149...            2    244.4770 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450 #> 5  LINESTRING (1174 -1684, 153...            4    375.4797 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648 #> 7  LINESTRING (946 -1386, 1032...            6    596.2349 #> 8  LINESTRING (1350 -1896, 137...            7    205.1828 #> 9  LINESTRING (1117 -1979, 112...            8    385.0117 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483"},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs-PointMap-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Link two PointMap Cells (refs) — linkRefs,PointMap-method","title":"Link two PointMap Cells (refs) — linkRefs,PointMap-method","text":"Link two cells PointMap using refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs-PointMap-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link two PointMap Cells (refs) — linkRefs,PointMap-method","text":"","code":"# S4 method for class 'PointMap' linkRefs(map, fromRef, toRef, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs-PointMap-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link two PointMap Cells (refs) — linkRefs,PointMap-method","text":"map PointMap fromRef Ref first link line toRef Ref second link line copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs-PointMap-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link two PointMap Cells (refs) — linkRefs,PointMap-method","text":"new PointMap linked points","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs-PointMap-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Link two PointMap Cells (refs) — linkRefs,PointMap-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"gallery\",     \"gallery_lines.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.04,     fillX = 3.01,     fillY = 6.7,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) pointMap <- linkRefs(pointMap, 1835056L, 7208971L)"},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Link map points/lines using their refs — linkRefs","title":"Link map points/lines using their refs — linkRefs","text":"Link map points/lines using refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link map points/lines using their refs — linkRefs","text":"","code":"linkRefs(map, fromRef, toRef, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link map points/lines using their refs — linkRefs","text":"map sala map fromRef ref origin element toRef ref target element copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/linkRefs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link map points/lines using their refs — linkRefs","text":"new map linked points/lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/links-AxialShapeGraph-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Axial ShapeGraph links — links,AxialShapeGraph-method","title":"Get the Axial ShapeGraph links — links,AxialShapeGraph-method","text":"Get Axial ShapeGraph links","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/links-AxialShapeGraph-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Axial ShapeGraph links — links,AxialShapeGraph-method","text":"","code":"# S4 method for class 'AxialShapeGraph' links(map)"},{"path":"https://spatialnous.github.io/alcyon/reference/links-AxialShapeGraph-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Axial ShapeGraph links — links,AxialShapeGraph-method","text":"map Axial ShapeGraph","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/links-AxialShapeGraph-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Axial ShapeGraph links — links,AxialShapeGraph-method","text":"matrix linked refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/links-AxialShapeGraph-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Axial ShapeGraph links — links,AxialShapeGraph-method","text":"","code":"# links of an axial map mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") linkRefs(shapeGraph, 0L, 9L) #> Simple feature collection with 58 features and 6 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 1             0            6            0    396.1881 #> 2             1            7            1    259.4803 #> 3             2            7            2    244.4770 #> 4             3            8            3    210.3450 #> 5             4            4            4    375.4797 #> 6             5            8            5    145.4648 #> 7             6            6            6    596.2349 #> 8             7            6            7    205.1829 #> 9             8            7            8    385.0117 #> 10            9           10            9    273.1483 #>                          geometry Data Map Ref Line Length #> 1  LINESTRING (984 -1684, 1346...            0    396.1881 #> 2  LINESTRING (1306 -1497, 137...            1    259.4803 #> 3  LINESTRING (1257 -1772, 149...            2    244.4770 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450 #> 5  LINESTRING (1174 -1684, 153...            4    375.4797 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648 #> 7  LINESTRING (946 -1386, 1032...            6    596.2349 #> 8  LINESTRING (1350 -1896, 137...            7    205.1828 #> 9  LINESTRING (1117 -1979, 112...            8    385.0117 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483 unlinkCoords(shapeGraph, 530923.0, 184041.0, 530956.0, 183887.0) #> Simple feature collection with 58 features and 6 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 1             0            6            0    396.1881 #> 2             1            7            1    259.4803 #> 3             2            7            2    244.4770 #> 4             3            8            3    210.3450 #> 5             4            4            4    375.4797 #> 6             5            8            5    145.4648 #> 7             6            6            6    596.2349 #> 8             7            6            7    205.1829 #> 9             8            7            8    385.0117 #> 10            9           10            9    273.1483 #>                          geometry Data Map Ref Line Length #> 1  LINESTRING (984 -1684, 1346...            0    396.1881 #> 2  LINESTRING (1306 -1497, 137...            1    259.4803 #> 3  LINESTRING (1257 -1772, 149...            2    244.4770 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450 #> 5  LINESTRING (1174 -1684, 153...            4    375.4797 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648 #> 7  LINESTRING (946 -1386, 1032...            6    596.2349 #> 8  LINESTRING (1350 -1896, 137...            7    205.1828 #> 9  LINESTRING (1117 -1979, 112...            8    385.0117 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483 links(shapeGraph) #>      from to isunlink"},{"path":"https://spatialnous.github.io/alcyon/reference/links-PointMap-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the PointMap links — links,PointMap-method","title":"Get the PointMap links — links,PointMap-method","text":"Get PointMap links","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/links-PointMap-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the PointMap links — links,PointMap-method","text":"","code":"# S4 method for class 'PointMap' links(map)"},{"path":"https://spatialnous.github.io/alcyon/reference/links-PointMap-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the PointMap links — links,PointMap-method","text":"map PointMap","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/links-PointMap-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the PointMap links — links,PointMap-method","text":"matrix linked refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/links-PointMap-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the PointMap links — links,PointMap-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"gallery\",     \"gallery_lines.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.04,     fillX = 3.01,     fillY = 6.7,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) linkRefs(pointMap, 1835056L, 7208971L) #> stars object with 2 dimensions and 7 attributes #> attribute(s): #>                           Min.      1st Qu.       Median         Mean #> Ref                  0.0000000 1835064.7500 3.735590e+06 3.735590e+06 #> Connectivity         9.0000000     107.0000 1.790000e+02 2.048587e+02 #> Point First Moment   0.6780338      30.5024 7.556305e+01 1.097780e+02 #> Point Second Moment  0.0560000      12.0508 4.336080e+01 1.115533e+02 #> blocked              0.0000000       0.0000 0.000000e+00 1.989703e-01 #> contextfilled        0.0000000       0.0000 0.000000e+00 0.000000e+00 #> filled               0.0000000       0.0000 0.000000e+00 4.956522e-01 #>                           3rd Qu.         Max. NA's #> Ref                  5636114.2500 7471179.0000    0 #> Connectivity             284.0000     624.0000 4408 #> Point First Moment       149.7499     619.3036 4408 #> Point Second Moment      105.2376    1218.8016 4408 #> blocked                    0.0000       1.0000    0 #> contextfilled              0.0000       0.0000    0 #> filled                     1.0000       1.0000    0 #> dimension(s): #>   from  to offset delta x/y #> x    1 115   0.62  0.04 [x] #> y    1  76   7.82 -0.04 [y] links(pointMap) #>      from to"},{"path":"https://spatialnous.github.io/alcyon/reference/links.html","id":null,"dir":"Reference","previous_headings":"","what":"Get map links — links","title":"Get map links — links","text":"Get map links","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get map links — links","text":"","code":"links(map)"},{"path":"https://spatialnous.github.io/alcyon/reference/links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get map links — links","text":"map sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get map links — links","text":"matrix linked refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeAllLineMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an All-line Map — makeAllLineMap","title":"Create an All-line Map — makeAllLineMap","text":"Create -line Map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeAllLineMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an All-line Map — makeAllLineMap","text":"","code":"makeAllLineMap(boundsMap, seedX, seedY, verbose = FALSE)"},{"path":"https://spatialnous.github.io/alcyon/reference/makeAllLineMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an All-line Map — makeAllLineMap","text":"boundsMap boundary ShapeMap create -line map seedX X coordinate seed (point initiates process) seedY Y coordinate seed (point initiates process) verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeAllLineMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an All-line Map — makeAllLineMap","text":"-line Axial ShapeGraph","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeAllLineMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an All-line Map — makeAllLineMap","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") makeAllLineMap(   shapeMap,   seedX = 3.01,   seedY = 6.7 ) #> Simple feature collection with 7 features and 3 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 1.888668 ymin: 1.544019 xmax: 7.89713 ymax: 6.908548 #> CRS:           NA #>   Connectivity Line Length Ref                       geometry #> 1            6    6.046897   0 LINESTRING (1.888668 6.9085... #> 2            6    6.810349   1 LINESTRING (1.888668 6.9085... #> 3            5    6.267958   2 LINESTRING (1.888668 6.9085... #> 4            6    6.117036   3 LINESTRING (3.144843 6.9085... #> 5            6    6.906496   4 LINESTRING (1.888668 1.5609... #> 6            5    6.918201   5 LINESTRING (1.888668 3.4537... #> 7            4    4.764533   6 LINESTRING (1.888668 1.5609..."},{"path":"https://spatialnous.github.io/alcyon/reference/makeColour.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Colour from depthmapX's Palettes — makeColour","title":"Single Colour from depthmapX's Palettes — makeColour","text":"Create single colour depthmapX's palettes.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeColour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Colour from depthmapX's Palettes — makeColour","text":"","code":"makeDepthmapClassicColour(value, rangeMin = 0, rangeMax = 1)  makeAxmanesqueColour(value, rangeMin = 0, rangeMax = 1)  makePurpleOrangeColour(value, rangeMin = 0, rangeMax = 1)  makeBlueRedColour(value, rangeMin = 0, rangeMax = 1)  makeGreyScaleColour(value, rangeMin = 0, rangeMax = 1)  makeNiceHSBColour(value, rangeMin = 0, rangeMax = 1)"},{"path":"https://spatialnous.github.io/alcyon/reference/makeColour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Colour from depthmapX's Palettes — makeColour","text":"value Value within min/max range take rangeMin min value range rangeMax max value range","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeColour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Colour from depthmapX's Palettes — makeColour","text":"Returns single colour.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeColour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single Colour from depthmapX's Palettes — makeColour","text":"","code":"makeDepthmapClassicColour(0.2, 0, 1) #> [1] \"#33FF00\" makeAxmanesqueColour(0.2, 0, 1) #> [1] \"#3388DD\" makePurpleOrangeColour(0.2, 0, 1) #> [1] \"#998EC3\" makeBlueRedColour(0.2, 0, 1) #> [1] \"#91BFDB\" makeGreyScaleColour(0.2, 0, 1) #> [1] \"#444444\" makeNiceHSBColour(0.2, 0, 1) #> [1] \"#3377DD\""},{"path":"https://spatialnous.github.io/alcyon/reference/makeVGAGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a graph between visible cells in the PointMap — makeVGAGraph","title":"Create a graph between visible cells in the PointMap — makeVGAGraph","text":"Create graph visible cells PointMap","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeVGAGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a graph between visible cells in the PointMap — makeVGAGraph","text":"","code":"makeVGAGraph(   pointMap,   boundaryGraph = FALSE,   maxVisibility = NA,   copyMap = TRUE,   verbose = FALSE )"},{"path":"https://spatialnous.github.io/alcyon/reference/makeVGAGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a graph between visible cells in the PointMap — makeVGAGraph","text":"pointMap input PointMap boundaryGraph create graph boundary cells maxVisibility Limit far two cells can connected copyMap Optional. Copy internal sala map verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeVGAGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a graph between visible cells in the PointMap — makeVGAGraph","text":"new PointMap graph points","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeVGAGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a graph between visible cells in the PointMap — makeVGAGraph","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") lineStringMap <- as(sfMap, \"sf\") mapRegion <- sf::st_bbox(lineStringMap) pointMap <- createGrid(   minX = mapRegion[[\"xmin\"]],   minY = mapRegion[[\"ymin\"]],   maxX = mapRegion[[\"xmax\"]],   maxY = mapRegion[[\"ymax\"]],   gridSize = 0.5 ) pointMap <- blockLines(   pointMap = pointMap,   lineStringMap = lineStringMap[vector()] ) pointMap <- fillGrid(   pointMap = pointMap,   fillX = 3.01,   fillY = 6.7 ) makeVGAGraph(   pointMap = pointMap,   boundaryGraph = FALSE,   maxVisibility = NA ) #> stars object with 2 dimensions and 7 attributes #> attribute(s): #>                           Min.     1st Qu.     Median         Mean     3rd Qu. #> Ref                    0.00000 196610.7500 393221.500 3.932215e+05 589832.2500 #> blocked                0.00000      0.0000      0.000 3.205128e-01      1.0000 #> contextfilled          0.00000      0.0000      0.000 0.000000e+00      0.0000 #> filled                 0.00000      0.0000      1.000 5.769231e-01      1.0000 #> Connectivity          39.00000     65.0000     75.000 7.106667e+01     81.0000 #> Point First Moment    92.03807    145.1355    173.267 1.750389e+02    202.1131 #> Point Second Moment  240.00000    388.5625    531.500 5.387111e+02    665.5625 #>                             Max. NA's #> Ref                  786443.0000    0 #> blocked                   1.0000    0 #> contextfilled             0.0000    0 #> filled                    1.0000    0 #> Connectivity             88.0000   66 #> Point First Moment      292.1885   66 #> Point Second Moment    1157.7500   66 #> dimension(s): #>   from to offset delta x/y #> x    1 13   1.75   0.5 [x] #> y    1 12   7.25  -0.5 [y]"},{"path":"https://spatialnous.github.io/alcyon/reference/makeVGAPointMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a PointMap grid, fill it and make the graph — makeVGAPointMap","title":"Create a PointMap grid, fill it and make the graph — makeVGAPointMap","text":"intended single command get lines PointMap ready analysis","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeVGAPointMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a PointMap grid, fill it and make the graph — makeVGAPointMap","text":"","code":"makeVGAPointMap(   lineStringMap,   gridSize,   fillX,   fillY,   maxVisibility = NA,   boundaryGraph = FALSE,   verbose = FALSE )"},{"path":"https://spatialnous.github.io/alcyon/reference/makeVGAPointMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a PointMap grid, fill it and make the graph — makeVGAPointMap","text":"lineStringMap Map lines, either ShapeMap, sf lineString map gridSize Size cells fillX X coordinate fill points fillY Y coordinate fill points maxVisibility Limit far two cells can connected boundaryGraph create graph boundary cells verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeVGAPointMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a PointMap grid, fill it and make the graph — makeVGAPointMap","text":"new PointMap","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/makeVGAPointMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a PointMap grid, fill it and make the graph — makeVGAPointMap","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") makeVGAPointMap(   sfMap,   gridSize = 0.5,   fillX = 3.01,   fillY = 6.7,   maxVisibility = NA,   boundaryGraph = FALSE,   verbose = FALSE ) #> stars object with 2 dimensions and 7 attributes #> attribute(s): #>                           Min.     1st Qu.     Median         Mean     3rd Qu. #> Ref                    0.00000 196610.7500 393221.500 3.932215e+05 589832.2500 #> Connectivity          39.00000     65.0000     75.000 7.106667e+01     81.0000 #> Point First Moment    92.03807    145.1355    173.267 1.750389e+02    202.1131 #> Point Second Moment  240.00000    388.5625    531.500 5.387111e+02    665.5625 #> blocked                0.00000      0.0000      0.000 3.205128e-01      1.0000 #> contextfilled          0.00000      0.0000      0.000 0.000000e+00      0.0000 #> filled                 0.00000      0.0000      1.000 5.769231e-01      1.0000 #>                             Max. NA's #> Ref                  786443.0000    0 #> Connectivity             88.0000   66 #> Point First Moment      292.1885   66 #> Point Second Moment    1157.7500   66 #> blocked                   1.0000    0 #> contextfilled             0.0000    0 #> filled                    1.0000    0 #> dimension(s): #>   from to offset delta x/y #> x    1 13   1.75   0.5 [x] #> y    1 12   7.25  -0.5 [y]"},{"path":"https://spatialnous.github.io/alcyon/reference/matchPointsToLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Match points to lines — matchPointsToLines","title":"Match points to lines — matchPointsToLines","text":"Match points closest line. Matches (spatial-join) points lines. Finds point closest line. One point attached one line, thus fewer points lines given lines point attached.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/matchPointsToLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match points to lines — matchPointsToLines","text":"","code":"matchPointsToLines(points, lines, getIndex = FALSE)"},{"path":"https://spatialnous.github.io/alcyon/reference/matchPointsToLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match points to lines — matchPointsToLines","text":"points Points attach. lines Lines attach . getIndex Get index returned data.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/matchPointsToLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match points to lines — matchPointsToLines","text":"getIndex TRUE index points relate matching lines given. , data points dataframe returned.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/matchPointsToLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match points to lines — matchPointsToLines","text":"","code":"segmentsMif <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_segment_original.mif\",     package = \"alcyon\" ) segmentsSf <- st_read(     segmentsMif,     geometry_column = 1L, quiet = TRUE ) gateCountsMif <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_ped_gatecounts.mif\",     package = \"alcyon\" ) gateCountsSf <- st_read(     gateCountsMif,     geometry_column = 1L, quiet = TRUE ) matchPointsToLines(gateCountsSf, segmentsSf) #> Simple feature collection with 173 features and 19 fields (with 64 geometries empty) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 990.3315 ymin: -2033.145 xmax: 1367.995 ymax: -1542.85 #> CRS:           NA #> First 10 features: #>      ID Area_Name Gate_No Axial_Map LineID        X         Y mov_ped_ph #> 1     1 Barnsbury       1 Barnsbury      3 1017.248 -1669.215        104 #> 2     2 Barnsbury       2 Barnsbury      3 1084.500 -1639.305         88 #> 3     3 Barnsbury       3 Barnsbury      3 1144.725 -1612.515        114 #> 5     5 Barnsbury       7 Barnsbury      3 1244.630 -1568.085        134 #> 7     7 Barnsbury       9 Barnsbury      3 1301.365 -1542.850        169 #> 100 100 Barnsbury     126 Barnsbury      4 1327.140 -1569.105        163 #> 101 101 Barnsbury     127 Barnsbury      4 1341.720 -1618.845        168 #> 102 102 Barnsbury     128 Barnsbury      4 1352.345 -1655.075        133 #> 103 103 Barnsbury     129 Barnsbury      4 1361.620 -1686.715        142 #> NA   NA      <NA>      NA      <NA>     NA       NA        NA         NA #>         landuse trafmanage streettype avebuildheight maxbuildheight #> 1   residential     twoway    primary              3              4 #> 2   residential     twoway    primary              3              4 #> 3   residential     twoway    primary              3              4 #> 5        school     twoway    primary              4              5 #> 7   residential     twoway    primary              3              3 #> 100 residential     twoway    primary              4              5 #> 101 residential     twoway    primary              4              4 #> 102 residential     twoway    primary              3              4 #> 103 residential     twoway    primary              4              4 #> NA         <NA>       <NA>       <NA>             NA             NA #>     diff_max_avbheight street_width pavement_width gross_veh_road_width #> 1                    1           16            4.0                 12.0 #> 2                    1           16            4.0                 12.0 #> 3                    1           16            4.0                 12.0 #> 5                    1           12            4.0                  8.0 #> 7                    0           12            4.0                  8.0 #> 100                  1           20            5.5                 14.5 #> 101                  0           22            7.0                 15.0 #> 102                  1           21            7.0                 14.0 #> 103                  0           19            6.0                 13.0 #> NA                  NA           NA             NA                   NA #>     parking_width effective_road_width                   geometry #> 1             4.5                  7.5 POINT (1017.248 -1669.215) #> 2             4.5                  7.5   POINT (1084.5 -1639.305) #> 3             3.5                  8.5 POINT (1144.725 -1612.515) #> 5             1.8                  6.2  POINT (1244.63 -1568.085) #> 7             0.0                  8.0  POINT (1301.365 -1542.85) #> 100           3.5                 11.0  POINT (1327.14 -1569.105) #> 101           3.5                 11.5  POINT (1341.72 -1618.845) #> 102           1.8                 12.2 POINT (1352.345 -1655.075) #> 103           1.8                 11.2  POINT (1361.62 -1686.715) #> NA             NA                   NA                POINT EMPTY"},{"path":"https://spatialnous.github.io/alcyon/reference/name-PointMap-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the PointMap name — name,PointMap-method","title":"Get the PointMap name — name,PointMap-method","text":"Get PointMap name","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/name-PointMap-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the PointMap name — name,PointMap-method","text":"","code":"# S4 method for class 'PointMap' name(map)"},{"path":"https://spatialnous.github.io/alcyon/reference/name-PointMap-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the PointMap name — name,PointMap-method","text":"map PointMap","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/name-PointMap-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the PointMap name — name,PointMap-method","text":"name PointMap string","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/name-PointMap-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the PointMap name — name,PointMap-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"gallery\",     \"gallery_lines.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.04,     fillX = 3.01,     fillY = 6.7,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) name(pointMap) #> [1] \"PointMap\""},{"path":"https://spatialnous.github.io/alcyon/reference/name-ShapeMap-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the ShapeMap name — name,ShapeMap-method","title":"Get the ShapeMap name — name,ShapeMap-method","text":"Get ShapeMap name","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/name-ShapeMap-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the ShapeMap name — name,ShapeMap-method","text":"","code":"# S4 method for class 'ShapeMap' name(map)"},{"path":"https://spatialnous.github.io/alcyon/reference/name-ShapeMap-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the ShapeMap name — name,ShapeMap-method","text":"map ShapeMap","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/name-ShapeMap-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the ShapeMap name — name,ShapeMap-method","text":"name ShapeMap string","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/name-ShapeMap-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the ShapeMap name — name,ShapeMap-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") name(shapeMap) #> [1] \"tmp_df_shp\""},{"path":"https://spatialnous.github.io/alcyon/reference/name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get map name — name","title":"Get map name — name","text":"Get map name","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get map name — name","text":"","code":"name(map)"},{"path":"https://spatialnous.github.io/alcyon/reference/name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get map name — name","text":"map sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get map name — name","text":"name object string","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/oneToAllTraverse.html","id":null,"dir":"Reference","previous_headings":"","what":"One-to-all traversal — oneToAllTraverse","title":"One-to-all traversal — oneToAllTraverse","text":"Runs one--traversal map graph. applicable : PointMaps (Visibility Graph Analysis) Axial ShapeGraphs (Axial analysis) Segment ShapeGraphs (Segment analysis)","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/oneToAllTraverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-to-all traversal — oneToAllTraverse","text":"","code":"oneToAllTraverse(   map,   traversalType,   fromX,   fromY,   quantizationWidth = NA,   copyMap = TRUE,   verbose = FALSE )"},{"path":"https://spatialnous.github.io/alcyon/reference/oneToAllTraverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-to-all traversal — oneToAllTraverse","text":"map PointMap, Axial ShapeGraph Segment ShapeGraph traversalType traversal type. See TraversalType fromX X coordinate point start traversal fromY X coordinate point start traversal quantizationWidth Set use chunks width instead continuous values cost traversal. equivalent \"tulip bins\" depthmapX's tulip analysis (1024 tulip bins = pi/1024 quantizationWidth). works Segment ShapeGraphs copyMap Optional. Copy internal sala map verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/oneToAllTraverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One-to-all traversal — oneToAllTraverse","text":"Returns list : completed: Whether analysis completed newAttributes: new attributes created   process","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/oneToAllTraverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One-to-all traversal — oneToAllTraverse","text":"","code":"# Pointmap analysis (VGA) mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.5,     fillX = 3.0,     fillY = 6.0,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) oneToAllTraverse(   pointMap,   traversalType = TraversalType$Metric,   fromX = 3.01,   fromY = 6.7 ) #> stars object with 2 dimensions and 10 attributes #> attribute(s): #>                                      Min.      1st Qu.       Median #> Ref                               0.00000 1.966108e+05 3.932215e+05 #> Connectivity                     39.00000 6.500000e+01 7.500000e+01 #> Point First Moment               92.03807 1.451355e+02 1.732670e+02 #> Point Second Moment             240.00000 3.885625e+02 5.315000e+02 #> blocked                           0.00000 0.000000e+00 0.000000e+00 #> contextfilled                     0.00000 0.000000e+00 0.000000e+00 #> filled                            0.00000 0.000000e+00 1.000000e+00 #> Metric Step Shortest-Path A...    0.00000 0.000000e+00 0.000000e+00 #> Metric Step Shortest-Path L...    0.00000 1.852082e+00 3.041381e+00 #> Metric Straight-Line Distance     0.00000 1.852082e+00 3.041381e+00 #>                                         Mean      3rd Qu.         Max. NA's #> Ref                             3.932215e+05 5.898322e+05 7.864430e+05    0 #> Connectivity                    7.106667e+01 8.100000e+01 8.800000e+01   66 #> Point First Moment              1.750389e+02 2.021131e+02 2.921885e+02   66 #> Point Second Moment             5.387111e+02 6.655625e+02 1.157750e+03   66 #> blocked                         3.205128e-01 1.000000e+00 1.000000e+00    0 #> contextfilled                   0.000000e+00 0.000000e+00 0.000000e+00    0 #> filled                          5.769231e-01 1.000000e+00 1.000000e+00    0 #> Metric Step Shortest-Path A...  1.721897e-02 0.000000e+00 6.559583e-01   66 #> Metric Step Shortest-Path L...  2.940409e+00 4.032915e+00 5.408327e+00   66 #> Metric Straight-Line Distance   2.934198e+00 4.031129e+00 5.408327e+00   66 #> dimension(s): #>   from to offset delta x/y #> x    1 13   1.75   0.5 [x] #> y    1 12   7.25  -0.5 [y]  # Axial analysis mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") oneToAllTraverse(   shapeGraph,   traversalType = TraversalType$Topological,   fromX = 1217.1,   fromY = -1977.3 ) #> Simple feature collection with 58 features and 7 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 1             0            6            0    396.1881 #> 2             1            7            1    259.4803 #> 3             2            7            2    244.4770 #> 4             3            8            3    210.3450 #> 5             4            4            4    375.4797 #> 6             5            8            5    145.4648 #> 7             6            6            6    596.2349 #> 8             7            6            7    205.1829 #> 9             8            7            8    385.0117 #> 10            9           10            9    273.1483 #>                          geometry Data Map Ref Line Length Step Depth #> 1  LINESTRING (984 -1684, 1346...            0    396.1881          3 #> 2  LINESTRING (1306 -1497, 137...            1    259.4803          3 #> 3  LINESTRING (1257 -1772, 149...            2    244.4770          2 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450          2 #> 5  LINESTRING (1174 -1684, 153...            4    375.4797          3 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648          1 #> 7  LINESTRING (946 -1386, 1032...            6    596.2349          2 #> 8  LINESTRING (1350 -1896, 137...            7    205.1828          2 #> 9  LINESTRING (1117 -1979, 112...            8    385.0117          2 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483          1  # Segment analysis mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_segment_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"SegmentShapeGraph\") oneToAllTraverse(   shapeGraph,   traversalType = TraversalType$Topological,   fromX = 1217.1,   fromY = -1977.3 ) #> Simple feature collection with 173 features and 11 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 989.1063 ymin: -2040.514 xmax: 1377.667 ymax: -1535.739 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Angular_Connectivity Axial_Line_Ref Connectivity Data_Map_Ref #> 1             0             1.981438             -1            3            0 #> 2             1             2.115670             -1            4            1 #> 3             2             1.775849             -1            4            2 #> 4             3             2.034886             -1            4            3 #> 5             4             2.002752             -1            3            4 #> 6             5             2.052529             -1            3            5 #> 7             6             2.049290             -1            4            6 #> 8             7             2.035002             -1            4            7 #> 9             8             2.948040             -1            5            8 #> 10            9             4.000000             -1            6            9 #>    Segment_Length                       geometry Angular Connectivity #> 1       65.799698 LINESTRING (989.1063 -1681....             1.981438 #> 2       77.203362 LINESTRING (1049.228 -1654....             2.115669 #> 3       90.154808 LINESTRING (1119.769 -1623....             1.775849 #> 4       91.088219 LINESTRING (1202.144 -1586....             2.034886 #> 5       35.005592 LINESTRING (1285.372 -1549....             2.002752 #> 6       69.541687 LINESTRING (1317.357 -1535....             2.052529 #> 7       37.176987 LINESTRING (1336.921 -1602....             2.049290 #> 8       35.278736 LINESTRING (1347.381 -1638....             2.035002 #> 9       34.014023 LINESTRING (1357.306 -1672....             2.948040 #> 10       9.775865 LINESTRING (1366.875 -1704....             4.000000 #>    Axial Line Ref Data Map Ref Segment Length Topological Step Depth #> 1              -1            0      65.799698                      0 #> 2              -1            1      77.203362                      0 #> 3              -1            2      90.154808                      0 #> 4              -1            3      91.088219                      0 #> 5              -1            4      35.005592                      0 #> 6              -1            5      69.541687                      0 #> 7              -1            6      37.176987                      0 #> 8              -1            7      35.278736                      0 #> 9              -1            8      34.014023                      0 #> 10             -1            9       9.775865                      0"},{"path":"https://spatialnous.github.io/alcyon/reference/oneToOneTraverse.html","id":null,"dir":"Reference","previous_headings":"","what":"One-to-one traversal — oneToOneTraverse","title":"One-to-one traversal — oneToOneTraverse","text":"Runs one--one traversal map graph. applicable : PointMaps (Visibility Graph Analysis) Segment ShapeGraphs (Segment analysis)","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/oneToOneTraverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-to-one traversal — oneToOneTraverse","text":"","code":"oneToOneTraverse(   map,   traversalType,   fromX,   fromY,   toX,   toY,   quantizationWidth = NA,   copyMap = TRUE,   verbose = FALSE )"},{"path":"https://spatialnous.github.io/alcyon/reference/oneToOneTraverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-to-one traversal — oneToOneTraverse","text":"map PointMap Segment ShapeGraph traversalType traversal type. See TraversalType fromX X coordinate point(s) start traversal fromY X coordinate point(s) start traversal toX X coordinate point(s) start traversal toY X coordinate point(s) start traversal quantizationWidth Set use chunks width instead continuous values cost traversal. equivalent \"tulip bins\" depthmapX's tulip analysis (1024 tulip bins = pi/1024 quantizationWidth). works Segment ShapeGraphs copyMap Optional. Copy internal sala map verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/oneToOneTraverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One-to-one traversal — oneToOneTraverse","text":"Returns list : completed: Whether analysis completed newAttributes: new attributes created   process","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/oneToOneTraverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One-to-one traversal — oneToOneTraverse","text":"","code":"# Pointmap analysis (VGA) mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.5,     fillX = 3.0,     fillY = 6.0,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) oneToOneTraverse(   pointMap,   traversalType = TraversalType$Metric,   fromX = 7.52,   fromY = 6.02,   toX = 5.78,   toY = 2.96 ) #> stars object with 2 dimensions and 14 attributes #> attribute(s): #>                                        Min.       1st Qu.        Median #> Ref                               0.0000000  1.966108e+05 393221.500000 #> Connectivity                     39.0000000  6.500000e+01     75.000000 #> Point First Moment               92.0380707  1.451355e+02    173.266983 #> Point Second Moment             240.0000000  3.885625e+02    531.500000 #> blocked                           0.0000000  0.000000e+00      0.000000 #> contextfilled                     0.0000000  0.000000e+00      0.000000 #> filled                            0.0000000  0.000000e+00      1.000000 #> Metric Shortest Path             -1.0000000 -1.000000e+00     -1.000000 #> Metric Shortest Path Distance     0.0000000  7.017767e+00      9.964725 #> Metric Shortest Path Inv Me...    0.2380067  3.333333e-01      0.472136 #> Metric Shortest Path Linked      -1.0000000 -1.000000e+00     -1.000000 #> Metric Shortest Path Metric...    0.0000000  5.000000e-01      1.118034 #> Metric Shortest Path Order       -1.0000000 -1.000000e+00     -1.000000 #> Metric Shortest Path Visual...    0.0000000  1.000000e+00      1.000000 #>                                          Mean       3rd Qu.         Max. NA's #> Ref                              3.932215e+05  5.898322e+05 7.864430e+05    0 #> Connectivity                     7.106667e+01  8.100000e+01 8.800000e+01   66 #> Point First Moment               1.750389e+02  2.021131e+02 2.921885e+02   66 #> Point Second Moment              5.387111e+02  6.655625e+02 1.157750e+03   66 #> blocked                          3.205128e-01  1.000000e+00 1.000000e+00    0 #> contextfilled                    0.000000e+00  0.000000e+00 0.000000e+00    0 #> filled                           5.769231e-01  1.000000e+00 1.000000e+00    0 #> Metric Shortest Path             2.777778e-01 -1.000000e+00 1.500000e+01   66 #> Metric Shortest Path Distance    8.800187e+00  1.144408e+01 1.416942e+01   66 #> Metric Shortest Path Inv Me...   5.325789e-01  6.666667e-01 1.000000e+00   66 #> Metric Shortest Path Linked     -9.555556e-01 -1.000000e+00 0.000000e+00   66 #> Metric Shortest Path Metric...   1.235573e+00  2.000000e+00 3.201562e+00   66 #> Metric Shortest Path Order      -7.888889e-01 -1.000000e+00 5.000000e+00   66 #> Metric Shortest Path Visual...   2.066667e+00  3.000000e+00 9.000000e+00   66 #> dimension(s): #>   from to offset delta x/y #> x    1 13   1.75   0.5 [x] #> y    1 12   7.25  -0.5 [y]  # Segment analysis mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_segment_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"SegmentShapeGraph\") oneToOneTraverse(   shapeGraph,   traversalType = TraversalType$Topological,   fromX = 1217.1,   fromY = -1977.3,   toX = 1017.8,   toY = -1699.3 ) #> Simple feature collection with 173 features and 12 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 989.1063 ymin: -2040.514 xmax: 1377.667 ymax: -1535.739 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Angular_Connectivity Axial_Line_Ref Connectivity Data_Map_Ref #> 1             0             1.981438             -1            3            0 #> 2             1             2.115670             -1            4            1 #> 3             2             1.775849             -1            4            2 #> 4             3             2.034886             -1            4            3 #> 5             4             2.002752             -1            3            4 #> 6             5             2.052529             -1            3            5 #> 7             6             2.049290             -1            4            6 #> 8             7             2.035002             -1            4            7 #> 9             8             2.948040             -1            5            8 #> 10            9             4.000000             -1            6            9 #>    Segment_Length                       geometry Angular Connectivity #> 1       65.799698 LINESTRING (989.1063 -1681....             1.981438 #> 2       77.203362 LINESTRING (1049.228 -1654....             2.115669 #> 3       90.154808 LINESTRING (1119.769 -1623....             1.775849 #> 4       91.088219 LINESTRING (1202.144 -1586....             2.034886 #> 5       35.005592 LINESTRING (1285.372 -1549....             2.002752 #> 6       69.541687 LINESTRING (1317.357 -1535....             2.052529 #> 7       37.176987 LINESTRING (1336.921 -1602....             2.049290 #> 8       35.278736 LINESTRING (1347.381 -1638....             2.035002 #> 9       34.014023 LINESTRING (1357.306 -1672....             2.948040 #> 10       9.775865 LINESTRING (1366.875 -1704....             4.000000 #>    Axial Line Ref Data Map Ref Segment Length Topological Shortest Path Depth #> 1              -1            0      65.799698                              -1 #> 2              -1            1      77.203362                              -1 #> 3              -1            2      90.154808                              -1 #> 4              -1            3      91.088219                              -1 #> 5              -1            4      35.005592                              -1 #> 6              -1            5      69.541687                              -1 #> 7              -1            6      37.176987                               0 #> 8              -1            7      35.278736                              -1 #> 9              -1            8      34.014023                              -1 #> 10             -1            9       9.775865                              -1 #>    Topological Shortest Path Order #> 1                               -1 #> 2                               -1 #> 3                               -1 #> 4                               -1 #> 5                               -1 #> 6                               -1 #> 7                               40 #> 8                               -1 #> 9                               -1 #> 10                              -1"},{"path":"https://spatialnous.github.io/alcyon/reference/palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour Palettes from depthmapX — palettes","title":"Colour Palettes from depthmapX — palettes","text":"Create n contiguous colours taken depthmapX.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colour Palettes from depthmapX — palettes","text":"","code":"depthmap.classic.colour(n, rangeMin = 0, rangeMax = 1)  depthmap.axmanesque.colour(n, rangeMin = 0, rangeMax = 1)  depthmap.purpleorange.colour(n, rangeMin = 0, rangeMax = 1)  depthmap.bluered.colour(n, rangeMin = 0, rangeMax = 1)  depthmap.grayscale.colour(n, rangeMin = 0, rangeMax = 1)  depthmap.nicehsb.colour(n, rangeMin = 0, rangeMax = 1)"},{"path":"https://spatialnous.github.io/alcyon/reference/palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colour Palettes from depthmapX — palettes","text":"n Number colours generate rangeMin min value range rangeMax max value range","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colour Palettes from depthmapX — palettes","text":"Returns vector colours.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colour Palettes from depthmapX — palettes","text":"","code":"depthmap.classic.colour(100, 0, 1) #>   [1] \"#0000FF\" \"#0033FF\" \"#0066FF\" \"#0099FF\" \"#00CCFF\" \"#00FFFF\" \"#00FFCC\" #>   [8] \"#00FF99\" \"#00FF66\" \"#00FF33\" \"#00FF00\" \"#00FF00\" \"#11FF00\" \"#11FF00\" #>  [15] \"#11FF00\" \"#22FF00\" \"#22FF00\" \"#22FF00\" \"#33FF00\" \"#33FF00\" \"#33FF00\" #>  [22] \"#44FF00\" \"#44FF00\" \"#44FF00\" \"#55FF00\" \"#55FF00\" \"#55FF00\" \"#66FF00\" #>  [29] \"#66FF00\" \"#66FF00\" \"#77FF00\" \"#77FF00\" \"#77FF00\" \"#88FF00\" \"#88FF00\" #>  [36] \"#88FF00\" \"#99FF00\" \"#99FF00\" \"#99FF00\" \"#AAFF00\" \"#AAFF00\" \"#AAFF00\" #>  [43] \"#BBFF00\" \"#BBFF00\" \"#BBFF00\" \"#CCFF00\" \"#CCFF00\" \"#CCFF00\" \"#DDFF00\" #>  [50] \"#DDFF00\" \"#DDFF00\" \"#EEFF00\" \"#EEFF00\" \"#EEFF00\" \"#FFFF00\" \"#FFFF00\" #>  [57] \"#FFFF00\" \"#FFEE00\" \"#FFEE00\" \"#FFEE00\" \"#FFDD00\" \"#FFDD00\" \"#FFDD00\" #>  [64] \"#FFCC00\" \"#FFCC00\" \"#FFCC00\" \"#FFBB00\" \"#FFBB00\" \"#FFBB00\" \"#FFAA00\" #>  [71] \"#FFAA00\" \"#FFAA00\" \"#FF9900\" \"#FF9900\" \"#FF9900\" \"#FF8800\" \"#FF8800\" #>  [78] \"#FF8800\" \"#FF7700\" \"#FF7700\" \"#FF7700\" \"#FF6600\" \"#FF6600\" \"#FF6600\" #>  [85] \"#FF5500\" \"#FF5500\" \"#FF5500\" \"#FF4400\" \"#FF4400\" \"#FF4400\" \"#FF3300\" #>  [92] \"#FF3300\" \"#FF3300\" \"#FF2200\" \"#FF2200\" \"#FF2200\" \"#FF1100\" \"#FF1100\" #>  [99] \"#FF1100\" \"#FF0000\" depthmap.axmanesque.colour(100, 0, 1) #>   [1] \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3333DD\" #>   [8] \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3388DD\" \"#3388DD\" \"#3388DD\" #>  [15] \"#3388DD\" \"#3388DD\" \"#3388DD\" \"#3388DD\" \"#3388DD\" \"#3388DD\" \"#3388DD\" #>  [22] \"#22CCDD\" \"#22CCDD\" \"#22CCDD\" \"#22CCDD\" \"#22CCDD\" \"#22CCDD\" \"#22CCDD\" #>  [29] \"#22CCDD\" \"#22CCDD\" \"#22CCDD\" \"#22CCBB\" \"#22CCBB\" \"#22CCBB\" \"#22CCBB\" #>  [36] \"#22CCBB\" \"#22CCBB\" \"#22CCBB\" \"#22CCBB\" \"#22CCBB\" \"#22CCBB\" \"#22DD88\" #>  [43] \"#22DD88\" \"#22DD88\" \"#22DD88\" \"#22DD88\" \"#22DD88\" \"#22DD88\" \"#22DD88\" #>  [50] \"#22DD88\" \"#22DD88\" \"#88DD22\" \"#88DD22\" \"#88DD22\" \"#88DD22\" \"#88DD22\" #>  [57] \"#88DD22\" \"#88DD22\" \"#88DD22\" \"#88DD22\" \"#88DD22\" \"#BBCC22\" \"#BBCC22\" #>  [64] \"#BBCC22\" \"#BBCC22\" \"#BBCC22\" \"#BBCC22\" \"#BBCC22\" \"#BBCC22\" \"#BBCC22\" #>  [71] \"#BBCC22\" \"#DDCC22\" \"#DDCC22\" \"#DDCC22\" \"#DDCC22\" \"#DDCC22\" \"#DDCC22\" #>  [78] \"#DDCC22\" \"#DDCC22\" \"#DDCC22\" \"#DDCC22\" \"#DD8833\" \"#DD8833\" \"#DD8833\" #>  [85] \"#DD8833\" \"#DD8833\" \"#DD8833\" \"#DD8833\" \"#DD8833\" \"#DD8833\" \"#DD8833\" #>  [92] \"#DD3333\" \"#DD3333\" \"#DD3333\" \"#DD3333\" \"#DD3333\" \"#DD3333\" \"#DD3333\" #>  [99] \"#DD3333\" \"#DD3333\" depthmap.purpleorange.colour(100, 0, 1) #>   [1] \"#542788\" \"#542788\" \"#542788\" \"#542788\" \"#542788\" \"#542788\" \"#542788\" #>   [8] \"#542788\" \"#542788\" \"#542788\" \"#542788\" \"#542788\" \"#542788\" \"#542788\" #>  [15] \"#542788\" \"#998EC3\" \"#998EC3\" \"#998EC3\" \"#998EC3\" \"#998EC3\" \"#998EC3\" #>  [22] \"#998EC3\" \"#998EC3\" \"#998EC3\" \"#998EC3\" \"#998EC3\" \"#998EC3\" \"#998EC3\" #>  [29] \"#998EC3\" \"#D8DAEB\" \"#D8DAEB\" \"#D8DAEB\" \"#D8DAEB\" \"#D8DAEB\" \"#D8DAEB\" #>  [36] \"#D8DAEB\" \"#D8DAEB\" \"#D8DAEB\" \"#D8DAEB\" \"#D8DAEB\" \"#D8DAEB\" \"#D8DAEB\" #>  [43] \"#D8DAEB\" \"#F7F7F7\" \"#F7F7F7\" \"#F7F7F7\" \"#F7F7F7\" \"#F7F7F7\" \"#F7F7F7\" #>  [50] \"#F7F7F7\" \"#F7F7F7\" \"#F7F7F7\" \"#F7F7F7\" \"#F7F7F7\" \"#F7F7F7\" \"#F7F7F7\" #>  [57] \"#F7F7F7\" \"#F7F7F7\" \"#FEE0B6\" \"#FEE0B6\" \"#FEE0B6\" \"#FEE0B6\" \"#FEE0B6\" #>  [64] \"#FEE0B6\" \"#FEE0B6\" \"#FEE0B6\" \"#FEE0B6\" \"#FEE0B6\" \"#FEE0B6\" \"#FEE0B6\" #>  [71] \"#FEE0B6\" \"#FEE0B6\" \"#F1A340\" \"#F1A340\" \"#F1A340\" \"#F1A340\" \"#F1A340\" #>  [78] \"#F1A340\" \"#F1A340\" \"#F1A340\" \"#F1A340\" \"#F1A340\" \"#F1A340\" \"#F1A340\" #>  [85] \"#F1A340\" \"#F1A340\" \"#B35806\" \"#B35806\" \"#B35806\" \"#B35806\" \"#B35806\" #>  [92] \"#B35806\" \"#B35806\" \"#B35806\" \"#B35806\" \"#B35806\" \"#B35806\" \"#B35806\" #>  [99] \"#B35806\" \"#B35806\" depthmap.bluered.colour(100, 0, 1) #>   [1] \"#4575B4\" \"#4575B4\" \"#4575B4\" \"#4575B4\" \"#4575B4\" \"#4575B4\" \"#4575B4\" #>   [8] \"#4575B4\" \"#4575B4\" \"#4575B4\" \"#4575B4\" \"#4575B4\" \"#4575B4\" \"#4575B4\" #>  [15] \"#4575B4\" \"#91BFDB\" \"#91BFDB\" \"#91BFDB\" \"#91BFDB\" \"#91BFDB\" \"#91BFDB\" #>  [22] \"#91BFDB\" \"#91BFDB\" \"#91BFDB\" \"#91BFDB\" \"#91BFDB\" \"#91BFDB\" \"#91BFDB\" #>  [29] \"#91BFDB\" \"#E0F3F8\" \"#E0F3F8\" \"#E0F3F8\" \"#E0F3F8\" \"#E0F3F8\" \"#E0F3F8\" #>  [36] \"#E0F3F8\" \"#E0F3F8\" \"#E0F3F8\" \"#E0F3F8\" \"#E0F3F8\" \"#E0F3F8\" \"#E0F3F8\" #>  [43] \"#E0F3F8\" \"#FFFFBF\" \"#FFFFBF\" \"#FFFFBF\" \"#FFFFBF\" \"#FFFFBF\" \"#FFFFBF\" #>  [50] \"#FFFFBF\" \"#FFFFBF\" \"#FFFFBF\" \"#FFFFBF\" \"#FFFFBF\" \"#FFFFBF\" \"#FFFFBF\" #>  [57] \"#FFFFBF\" \"#FFFFBF\" \"#FEE090\" \"#FEE090\" \"#FEE090\" \"#FEE090\" \"#FEE090\" #>  [64] \"#FEE090\" \"#FEE090\" \"#FEE090\" \"#FEE090\" \"#FEE090\" \"#FEE090\" \"#FEE090\" #>  [71] \"#FEE090\" \"#FEE090\" \"#FC8D59\" \"#FC8D59\" \"#FC8D59\" \"#FC8D59\" \"#FC8D59\" #>  [78] \"#FC8D59\" \"#FC8D59\" \"#FC8D59\" \"#FC8D59\" \"#FC8D59\" \"#FC8D59\" \"#FC8D59\" #>  [85] \"#FC8D59\" \"#FC8D59\" \"#D73027\" \"#D73027\" \"#D73027\" \"#D73027\" \"#D73027\" #>  [92] \"#D73027\" \"#D73027\" \"#D73027\" \"#D73027\" \"#D73027\" \"#D73027\" \"#D73027\" #>  [99] \"#D73027\" \"#D73027\" depthmap.grayscale.colour(100, 0, 1) #>   [1] \"#000000\" \"#000000\" \"#000000\" \"#000000\" \"#000000\" \"#000000\" \"#000000\" #>   [8] \"#000000\" \"#000000\" \"#000000\" \"#000000\" \"#000000\" \"#000000\" \"#000000\" #>  [15] \"#000000\" \"#444444\" \"#444444\" \"#444444\" \"#444444\" \"#444444\" \"#444444\" #>  [22] \"#444444\" \"#444444\" \"#444444\" \"#444444\" \"#444444\" \"#444444\" \"#444444\" #>  [29] \"#444444\" \"#777777\" \"#777777\" \"#777777\" \"#777777\" \"#777777\" \"#777777\" #>  [36] \"#777777\" \"#777777\" \"#777777\" \"#777777\" \"#777777\" \"#777777\" \"#777777\" #>  [43] \"#777777\" \"#AAAAAA\" \"#AAAAAA\" \"#AAAAAA\" \"#AAAAAA\" \"#AAAAAA\" \"#AAAAAA\" #>  [50] \"#AAAAAA\" \"#AAAAAA\" \"#AAAAAA\" \"#AAAAAA\" \"#AAAAAA\" \"#AAAAAA\" \"#AAAAAA\" #>  [57] \"#AAAAAA\" \"#AAAAAA\" \"#CCCCCC\" \"#CCCCCC\" \"#CCCCCC\" \"#CCCCCC\" \"#CCCCCC\" #>  [64] \"#CCCCCC\" \"#CCCCCC\" \"#CCCCCC\" \"#CCCCCC\" \"#CCCCCC\" \"#CCCCCC\" \"#CCCCCC\" #>  [71] \"#CCCCCC\" \"#CCCCCC\" \"#EEEEEE\" \"#EEEEEE\" \"#EEEEEE\" \"#EEEEEE\" \"#EEEEEE\" #>  [78] \"#EEEEEE\" \"#EEEEEE\" \"#EEEEEE\" \"#EEEEEE\" \"#EEEEEE\" \"#EEEEEE\" \"#EEEEEE\" #>  [85] \"#EEEEEE\" \"#EEEEEE\" \"#FFFFFF\" \"#FFFFFF\" \"#FFFFFF\" \"#FFFFFF\" \"#FFFFFF\" #>  [92] \"#FFFFFF\" \"#FFFFFF\" \"#FFFFFF\" \"#FFFFFF\" \"#FFFFFF\" \"#FFFFFF\" \"#FFFFFF\" #>  [99] \"#FFFFFF\" \"#FFFFFF\" depthmap.nicehsb.colour(100, 0, 1) #>   [1] \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3333DD\" #>   [8] \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3333DD\" \"#3377DD\" \"#3377DD\" \"#3377DD\" #>  [15] \"#3377DD\" \"#3377DD\" \"#3377DD\" \"#3377DD\" \"#3377DD\" \"#3377DD\" \"#3377DD\" #>  [22] \"#33BBDD\" \"#33BBDD\" \"#33BBDD\" \"#33BBDD\" \"#33BBDD\" \"#33BBDD\" \"#33BBDD\" #>  [29] \"#33BBDD\" \"#33BBDD\" \"#33BBDD\" \"#33DDBB\" \"#33DDBB\" \"#33DDBB\" \"#33DDBB\" #>  [36] \"#33DDBB\" \"#33DDBB\" \"#33DDBB\" \"#33DDBB\" \"#33DDBB\" \"#33DDBB\" \"#33DD55\" #>  [43] \"#33DD55\" \"#33DD55\" \"#33DD55\" \"#33DD55\" \"#33DD55\" \"#33DD55\" \"#33DD55\" #>  [50] \"#33DD55\" \"#33DD55\" \"#55DD33\" \"#55DD33\" \"#55DD33\" \"#55DD33\" \"#55DD33\" #>  [57] \"#55DD33\" \"#55DD33\" \"#55DD33\" \"#55DD33\" \"#55DD33\" \"#BBDD33\" \"#BBDD33\" #>  [64] \"#BBDD33\" \"#BBDD33\" \"#BBDD33\" \"#BBDD33\" \"#BBDD33\" \"#BBDD33\" \"#BBDD33\" #>  [71] \"#BBDD33\" \"#DDBB33\" \"#DDBB33\" \"#DDBB33\" \"#DDBB33\" \"#DDBB33\" \"#DDBB33\" #>  [78] \"#DDBB33\" \"#DDBB33\" \"#DDBB33\" \"#DDBB33\" \"#DD7733\" \"#DD7733\" \"#DD7733\" #>  [85] \"#DD7733\" \"#DD7733\" \"#DD7733\" \"#DD7733\" \"#DD7733\" \"#DD7733\" \"#DD7733\" #>  [92] \"#DD3333\" \"#DD3333\" \"#DD3333\" \"#DD3333\" \"#DD3333\" \"#DD3333\" \"#DD3333\" #>  [99] \"#DD3333\" \"#DD3333\""},{"path":"https://spatialnous.github.io/alcyon/reference/plot.PointMap.html","id":null,"dir":"Reference","previous_headings":"","what":"plot a PointMap — plot.PointMap","title":"plot a PointMap — plot.PointMap","text":"Calls standard plot.stars, flips first argument around x axis","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/plot.PointMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot a PointMap — plot.PointMap","text":"","code":"# S3 method for class 'PointMap' plot(x, ...)"},{"path":"https://spatialnous.github.io/alcyon/reference/plot.PointMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot a PointMap — plot.PointMap","text":"x object class PointMap ... parameters passed stars[]","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/readMetaGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Read MetaGraph — readMetaGraph","title":"Read MetaGraph — readMetaGraph","text":"Reads metagraph bunch ShapeMaps/ShapeGraphs/PointMaps","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/readMetaGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read MetaGraph — readMetaGraph","text":"","code":"readMetaGraph(fileName)"},{"path":"https://spatialnous.github.io/alcyon/reference/readMetaGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read MetaGraph — readMetaGraph","text":"fileName metagraph file","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/readMetaGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read MetaGraph — readMetaGraph","text":"list ShapeMaps, ShapeGraphs PointMaps","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/readMetaGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read MetaGraph — readMetaGraph","text":"","code":"fileName <- system.file(     \"extdata\", \"testdata\", \"barnsbury\", \"barnsburySmall.graph\",     package = \"alcyon\" ) readMetaGraph(fileName) #> $shapeMaps #> $shapeMaps[[1]] #> Simple feature collection with 61 features and 15 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 530635.7 ymin: 183499.9 xmax: 531446.8 ymax: 184584 #> CRS:           NA #> First 10 features: #>    Choice Choice Line Length Wgt  Choice Line Length Wgt Norm  Choice Norm  #> 1     182                17580946                   0.18480287  0.102824859 #> 2     360                25343200                   0.26639614  0.203389823 #> 3     151                 5913097                   0.06215577  0.085310735 #> 4     123                10576759                   0.11117806  0.069491528 #> 5      10                 1522734                   0.01600628  0.005649718 #> 6      10                 1555573                   0.01635148  0.005649718 #> 7      66                 3922796                   0.04123464  0.037288137 #> 8     447                23175612                   0.24361144  0.252542377 #> 9      59                 3421053                   0.03596054  0.033333335 #> 10     52                 2569899                   0.02701360  0.029378532 #>    Connectivity Depthmap Ref Integration Hh  Line Length Mean Depth #> 1             5            0        1.873255   743.12512   2.850000 #> 2             6            1        1.943284   791.05670   2.783333 #> 3             4            2        1.350204   147.84348   3.566667 #> 4             4            3        1.762130   494.45386   2.966667 #> 5             3            4        1.060874    81.98231   4.266667 #> 6             3            5        1.060874    87.84889   4.266667 #> 7             3            6        1.291499   198.88251   3.683333 #> 8             7            7        1.873255   432.96561   2.850000 #> 9             3            8        1.291499   186.65433   3.683333 #> 10            3            9        1.252599    61.20964   3.766667 #>    Mean Depth Line Length Wgt  Node Count         Ra Ref Total Depth #> 1                     2.212653         61 0.06271186   0         171 #> 2                     2.150709         61 0.06045198   1         167 #> 3                     2.968181         61 0.08700565   2         214 #> 4                     2.378288         61 0.06666667   3         178 #> 5                     3.711566         61 0.11073446   4         256 #> 6                     3.710254         61 0.11073446   5         256 #> 7                     3.150338         61 0.09096045   6         221 #> 8                     2.271264         61 0.06271186   7         171 #> 9                     3.152537         61 0.09096045   8         221 #> 10                    3.430325         61 0.09378531   9         226 #>    Total Line Length                       geometry #> 1           13793.73 LINESTRING (530635.7 184468... #> 2           13793.73 LINESTRING (530655.1 184267... #> 3           13793.73 LINESTRING (530781.4 184323... #> 4           13793.73 LINESTRING (530667.8 184203... #> 5           13793.73 LINESTRING (530798.7 184207... #> 6           13793.73 LINESTRING (530747.9 184146... #> 7           13793.73 LINESTRING (530753.9 184164... #> 8           13793.73 LINESTRING (530638.1 184124... #> 9           13793.73 LINESTRING (530837.5 183967... #> 10          13793.73 LINESTRING (530776.9 183970... #>  #>  #> $axialShapeGraphs #> $axialShapeGraphs[[1]] #> Simple feature collection with 61 features and 27 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 530635.7 ymin: 183499.9 xmax: 531446.8 ymax: 184584 #> CRS:           NA #> First 10 features: #>    Choice Choice R3 Choice [Norm] Choice [Norm] R3 Connectivity   Control #> 1     182        71   0.102824859       0.07505286            5 1.1595238 #> 2     360       123   0.203389823       0.11884058            6 1.8289683 #> 3     151        34   0.085310735       0.09686609            4 1.0833334 #> 4     123        23   0.069491528       0.02671312            4 0.6861111 #> 5      10         8   0.005649718       0.05882353            3 0.9166667 #> 6      10         7   0.005649718       0.05147059            3 0.9166667 #> 7      66        24   0.037288137       0.07384615            3 0.8095238 #> 8     447       146   0.252542377       0.15433404            7 1.9777777 #> 9      59        15   0.033333335       0.04615385            3 0.8095238 #> 10     52        18   0.029378532       0.06000000            3 0.8666667 #>    Controllability  Entropy Entropy R3 Harmonic Mean Depth #> 1        0.2083333 2.066653   1.397394           11.006897 #> 2        0.2500000 2.038683   1.422025           10.116788 #> 3        0.3636364 2.291476   1.362396            8.522511 #> 4        0.1904762 2.072186   1.352967           11.052068 #> 5        0.3750000 2.538956   1.444160            7.382247 #> 6        0.3750000 2.538956   1.444160            7.382247 #> 7        0.2500000 2.412768   1.371848            5.438849 #> 8        0.2916667 2.184390   1.468103            5.992446 #> 9        0.2500000 2.412768   1.371848            5.438849 #> 10       0.3000000 2.359375   1.326972            9.124236 #>    Harmonic Mean Depth R3 Integration [HH] Integration [HH] R3 #> 1               13.217391         1.873255            2.281918 #> 2               14.943397         1.943284            2.312873 #> 3                8.784314         1.350204            1.692666 #> 4               11.222004         1.762130            2.135530 #> 5                6.206897         1.060874            1.402843 #> 6                6.206897         1.060874            1.402843 #> 7                7.753846         1.291499            1.685716 #> 8               15.893155         1.873255            2.361986 #> 9                7.753846         1.291499            1.685716 #> 10               7.368421         1.252599            1.588708 #>    Integration [P-value] Integration [P-value] R3 Integration [Tekl] #> 1               1.873255                 2.281918          0.7186259 #> 2               1.943284                 2.312873          0.7242701 #> 3               1.350204                 1.692666          0.6719123 #> 4               1.762130                 2.135530          0.7094139 #> 5               1.060874                 1.402843          0.6412120 #> 6               1.060874                 1.402843          0.6412120 #> 7               1.291499                 1.685716          0.6660345 #> 8               1.873255                 2.361986          0.7186259 #> 9               1.291499                 1.685716          0.6660345 #> 10              1.252599                 1.588708          0.6620498 #>    Integration [Tekl] R3 Intensity Intensity R3 Line Length Mean Depth #> 1              0.7524279 1.1460533    1.0841846   743.12512   2.850000 #> 2              0.7544013 1.1732045    1.0956584   791.05670   2.783333 #> 3              0.7001245 0.9135950    1.0038710   147.84348   3.566667 #> 4              0.7407473 1.0803705    1.0030618   494.45386   2.966667 #> 5              0.6631942 0.7942376    1.1815851    81.98231   4.266667 #> 6              0.6631942 0.7942376    1.1815851    87.84889   4.266667 #> 7              0.6994700 0.9198679    1.0288860   198.88251   3.683333 #> 8              0.7588459 1.2113434    1.1797254   432.96561   2.850000 #> 9              0.6994700 0.9198679    1.0288860   186.65433   3.683333 #> 10             0.6881648 0.8722540    0.9583684    61.20964   3.766667 #>    Mean Depth R3 Node Count Node Count R3 Ref Relativised Entropy #> 1       2.340909         61            45   0            1.742042 #> 2       2.347826         61            47   1            1.714357 #> 3       2.444444         61            28   2            2.033362 #> 4       2.404762         61            43   3            1.814690 #> 5       2.352941         61            18   4            2.236061 #> 6       2.352941         61            18   5            2.236061 #> 7       2.423077         61            27   6            2.016351 #> 8       2.295455         61            45   7            1.676272 #> 9       2.423077         61            27   8            2.016351 #> 10      2.480000         61            26   9            2.095260 #>    Relativised Entropy R3                       geometry #> 1                1.867046 LINESTRING (530635.7 184468... #> 2                1.861764 LINESTRING (530655.1 184267... #> 3                1.969265 LINESTRING (530781.4 184323... #> 4                1.956537 LINESTRING (530667.8 184203... #> 5                1.754716 LINESTRING (530798.7 184207... #> 6                1.754716 LINESTRING (530747.9 184146... #> 7                1.918381 LINESTRING (530753.9 184164... #> 8                1.778142 LINESTRING (530638.1 184124... #> 9                1.918381 LINESTRING (530837.5 183967... #> 10               2.009142 LINESTRING (530776.9 183970... #>  #>  #> $alllineShapeGraphs #> list() #>  #> $segmentShapeGraphs #> list() #>  #> $pointMaps #> list() #>"},{"path":"https://spatialnous.github.io/alcyon/reference/reduceToFewest.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce an All-line Map to two types of fewest-line maps — reduceToFewest","title":"Reduce an All-line Map to two types of fewest-line maps — reduceToFewest","text":"Reduce -line Map two types fewest-line maps","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/reduceToFewest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce an All-line Map to two types of fewest-line maps — reduceToFewest","text":"","code":"reduceToFewest(allLineMap)"},{"path":"https://spatialnous.github.io/alcyon/reference/reduceToFewest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce an All-line Map to two types of fewest-line maps — reduceToFewest","text":"allLineMap AllLineShapeGraph","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/reduceToFewest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce an All-line Map to two types of fewest-line maps — reduceToFewest","text":"list two fewest-line axial ShapeGraphs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/reduceToFewest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce an All-line Map to two types of fewest-line maps — reduceToFewest","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") allLineMap <- makeAllLineMap(   shapeMap,   seedX = 3.01,   seedY = 6.7 ) reduceToFewest(allLineMap) #> $`Fewest-Line Map (Subsets)` #> Simple feature collection with 1 feature and 3 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 1.888668 ymin: 1.560937 xmax: 6.259336 ymax: 6.908548 #> CRS:           NA #>   Connectivity Line Length Ref                       geometry #> 1            0    6.906496   0 LINESTRING (1.888668 1.5609... #>  #> $`Fewest-Line Map (Minimal)` #> Simple feature collection with 1 feature and 3 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 1.888668 ymin: 1.560937 xmax: 6.259336 ymax: 6.908548 #> CRS:           NA #>   Connectivity Line Length Ref                       geometry #> 1            0    6.906496   0 LINESTRING (1.888668 1.5609... #>"},{"path":"https://spatialnous.github.io/alcyon/reference/refIdToIndexAndBack.html","id":null,"dir":"Reference","previous_headings":"","what":"Ref ID to index and vice-versa — refIdToIndexAndBack","title":"Ref ID to index and vice-versa — refIdToIndexAndBack","text":"Converts depthmapX \"Ref\" ID indices (x, y) cell, reverse","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/refIdToIndexAndBack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ref ID to index and vice-versa — refIdToIndexAndBack","text":"","code":"refIDtoIndex(refID)  indexToRefID(i, j)"},{"path":"https://spatialnous.github.io/alcyon/reference/refIdToIndexAndBack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ref ID to index and vice-versa — refIdToIndexAndBack","text":"refID Ref ID x-axis index cell j y-axis index cell","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/refIdToIndexAndBack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ref ID to index and vice-versa — refIdToIndexAndBack","text":"pair indices (x, y) Ref ID","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/refIdToIndexAndBack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ref ID to index and vice-versa — refIdToIndexAndBack","text":"","code":"idx <- refIDtoIndex(852645) # outputs: #    i   j # 1 13 677  idx <- indexToRefID(13, 667) # outputs: # 852645"},{"path":"https://spatialnous.github.io/alcyon/reference/shapeMapToPolygonSf.html","id":null,"dir":"Reference","previous_headings":"","what":"ShapeMap to sf Polygon map — shapeMapToPolygonSf","title":"ShapeMap to sf Polygon map — shapeMapToPolygonSf","text":"Convert ShapeMap sf Polygon map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/shapeMapToPolygonSf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ShapeMap to sf Polygon map — shapeMapToPolygonSf","text":"","code":"shapeMapToPolygonSf(shapeMap)"},{"path":"https://spatialnous.github.io/alcyon/reference/shapeMapToPolygonSf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ShapeMap to sf Polygon map — shapeMapToPolygonSf","text":"shapeMap ShapeMap","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/shapeMapToPolygonSf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ShapeMap to sf Polygon map — shapeMapToPolygonSf","text":"new sf Polygon map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/shapeMapToPolygonSf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ShapeMap to sf Polygon map — shapeMapToPolygonSf","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") isovistMap <- isovist(   shapeMap,   x = c(3.01, 1.3),   y = c(6.70, 5.2),   angle = 0.01,   viewAngle = 3.14,   FALSE ) shapeMapToPolygonSf(isovistMap) #> Simple feature collection with 2 features and 9 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 1.888668 ymin: 1.544019 xmax: 7.89713 ymax: 6.908548 #> CRS:           NA #>    Isovist Area Isovist Compactness Isovist Drift Angle Isovist Drift Magnitude #> 1  1.665612e+01        4.293649e-01            311.8469                2.771847 #> 2 -1.776357e-15       -1.951463e-16            253.0725                9.616652 #>   Isovist Max Radial Isovist Min Radial Isovist Occlusivity Isovist Perimeter #> 1           6.002915          0.0000000            7.716775          22.07896 #> 2           3.686368          0.5886679            5.347612          10.69522 #>   Ref                       geometry #> 1   0 POLYGON ((7.8825 6.908548, ... #> 2   1 POLYGON ((1.888668 6.908548..."},{"path":"https://spatialnous.github.io/alcyon/reference/shapegraphToGraphData.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion of shapegraph to graph data — shapegraphToGraphData","title":"Conversion of shapegraph to graph data — shapegraphToGraphData","text":"Creates data construct graph, based connections x,y coordinates centroids shapes shapegraph (axial, segment, convex). Specify weightColumn assign weight graph edges.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/shapegraphToGraphData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion of shapegraph to graph data — shapegraphToGraphData","text":"","code":"shapegraphToGraphData(shapeGraph, weightColumn = NA)"},{"path":"https://spatialnous.github.io/alcyon/reference/shapegraphToGraphData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion of shapegraph to graph data — shapegraphToGraphData","text":"shapeGraph ShapeGraph weightColumn Optional. variable used assign weight graph edges","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/shapegraphToGraphData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion of shapegraph to graph data — shapegraphToGraphData","text":"Returns list edges vertices constructing graph.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/shapegraphToGraphData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion of shapegraph to graph data — shapegraphToGraphData","text":"weightColumn provided, edge connections weight calculated taking average variable connected nodes.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/shapegraphToGraphData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion of shapegraph to graph data — shapegraphToGraphData","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") shapegraphToGraphData(shapeGraph) #> $edges #>        from to   type         #>   [1,] \"0\"  \"1\"  \"connection\" #>   [2,] \"0\"  \"3\"  \"connection\" #>   [3,] \"0\"  \"6\"  \"connection\" #>   [4,] \"0\"  \"8\"  \"connection\" #>   [5,] \"0\"  \"21\" \"connection\" #>   [6,] \"0\"  \"24\" \"connection\" #>   [7,] \"1\"  \"2\"  \"connection\" #>   [8,] \"1\"  \"4\"  \"connection\" #>   [9,] \"1\"  \"7\"  \"connection\" #>  [10,] \"1\"  \"13\" \"connection\" #>  [11,] \"1\"  \"20\" \"connection\" #>  [12,] \"1\"  \"22\" \"connection\" #>  [13,] \"2\"  \"3\"  \"connection\" #>  [14,] \"2\"  \"5\"  \"connection\" #>  [15,] \"2\"  \"7\"  \"connection\" #>  [16,] \"2\"  \"26\" \"connection\" #>  [17,] \"2\"  \"27\" \"connection\" #>  [18,] \"2\"  \"29\" \"connection\" #>  [19,] \"3\"  \"4\"  \"connection\" #>  [20,] \"3\"  \"5\"  \"connection\" #>  [21,] \"13\" \"3\"  \"connection\" #>  [22,] \"14\" \"3\"  \"connection\" #>  [23,] \"20\" \"3\"  \"connection\" #>  [24,] \"22\" \"3\"  \"connection\" #>  [25,] \"31\" \"4\"  \"connection\" #>  [26,] \"32\" \"4\"  \"connection\" #>  [27,] \"5\"  \"9\"  \"connection\" #>  [28,] \"11\" \"5\"  \"connection\" #>  [29,] \"12\" \"5\"  \"connection\" #>  [30,] \"16\" \"5\"  \"connection\" #>  [31,] \"18\" \"5\"  \"connection\" #>  [32,] \"36\" \"5\"  \"connection\" #>  [33,] \"6\"  \"9\"  \"connection\" #>  [34,] \"14\" \"6\"  \"connection\" #>  [35,] \"15\" \"6\"  \"connection\" #>  [36,] \"17\" \"6\"  \"connection\" #>  [37,] \"19\" \"6\"  \"connection\" #>  [38,] \"10\" \"7\"  \"connection\" #>  [39,] \"12\" \"7\"  \"connection\" #>  [40,] \"13\" \"7\"  \"connection\" #>  [41,] \"39\" \"7\"  \"connection\" #>  [42,] \"8\"  \"9\"  \"connection\" #>  [43,] \"14\" \"8\"  \"connection\" #>  [44,] \"17\" \"8\"  \"connection\" #>  [45,] \"18\" \"8\"  \"connection\" #>  [46,] \"19\" \"8\"  \"connection\" #>  [47,] \"40\" \"8\"  \"connection\" #>  [48,] \"11\" \"9\"  \"connection\" #>  [49,] \"12\" \"9\"  \"connection\" #>  [50,] \"16\" \"9\"  \"connection\" #>  [51,] \"30\" \"9\"  \"connection\" #>  [52,] \"35\" \"9\"  \"connection\" #>  [53,] \"37\" \"9\"  \"connection\" #>  [54,] \"41\" \"9\"  \"connection\" #>  [55,] \"10\" \"12\" \"connection\" #>  [56,] \"10\" \"25\" \"connection\" #>  [57,] \"10\" \"28\" \"connection\" #>  [58,] \"10\" \"42\" \"connection\" #>  [59,] \"11\" \"12\" \"connection\" #>  [60,] \"11\" \"23\" \"connection\" #>  [61,] \"12\" \"16\" \"connection\" #>  [62,] \"12\" \"33\" \"connection\" #>  [63,] \"12\" \"34\" \"connection\" #>  [64,] \"12\" \"35\" \"connection\" #>  [65,] \"12\" \"37\" \"connection\" #>  [66,] \"12\" \"44\" \"connection\" #>  [67,] \"12\" \"46\" \"connection\" #>  [68,] \"13\" \"19\" \"connection\" #>  [69,] \"13\" \"38\" \"connection\" #>  [70,] \"13\" \"49\" \"connection\" #>  [71,] \"14\" \"21\" \"connection\" #>  [72,] \"15\" \"17\" \"connection\" #>  [73,] \"16\" \"23\" \"connection\" #>  [74,] \"16\" \"25\" \"connection\" #>  [75,] \"16\" \"45\" \"connection\" #>  [76,] \"16\" \"50\" \"connection\" #>  [77,] \"17\" \"23\" \"connection\" #>  [78,] \"17\" \"30\" \"connection\" #>  [79,] \"18\" \"38\" \"connection\" #>  [80,] \"19\" \"38\" \"connection\" #>  [81,] \"19\" \"43\" \"connection\" #>  [82,] \"19\" \"47\" \"connection\" #>  [83,] \"19\" \"48\" \"connection\" #>  [84,] \"19\" \"52\" \"connection\" #>  [85,] \"19\" \"53\" \"connection\" #>  [86,] \"20\" \"31\" \"connection\" #>  [87,] \"20\" \"43\" \"connection\" #>  [88,] \"21\" \"47\" \"connection\" #>  [89,] \"21\" \"48\" \"connection\" #>  [90,] \"23\" \"25\" \"connection\" #>  [91,] \"25\" \"51\" \"connection\" #>  [92,] \"26\" \"27\" \"connection\" #>  [93,] \"26\" \"33\" \"connection\" #>  [94,] \"27\" \"34\" \"connection\" #>  [95,] \"28\" \"42\" \"connection\" #>  [96,] \"28\" \"45\" \"connection\" #>  [97,] \"28\" \"51\" \"connection\" #>  [98,] \"29\" \"54\" \"connection\" #>  [99,] \"30\" \"40\" \"connection\" #> [100,] \"30\" \"55\" \"connection\" #> [101,] \"31\" \"32\" \"connection\" #> [102,] \"33\" \"34\" \"connection\" #> [103,] \"33\" \"44\" \"connection\" #> [104,] \"34\" \"44\" \"connection\" #> [105,] \"35\" \"56\" \"connection\" #> [106,] \"39\" \"54\" \"connection\" #> [107,] \"41\" \"56\" \"connection\" #> [108,] \"42\" \"44\" \"connection\" #> [109,] \"42\" \"50\" \"connection\" #> [110,] \"44\" \"50\" \"connection\" #> [111,] \"45\" \"50\" \"connection\" #> [112,] \"45\" \"51\" \"connection\" #> [113,] \"47\" \"48\" \"connection\" #> [114,] \"47\" \"53\" \"connection\" #> [115,] \"48\" \"52\" \"connection\" #> [116,] \"49\" \"57\" \"connection\" #> [117,] \"52\" \"55\" \"connection\" #> [118,] \"53\" \"55\" \"connection\" #>  #> $directed #> [1] FALSE #>  #> $vertices #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length Data Map Ref Line Length #> 1             0            6            0   396.18808            0   396.18808 #> 2             1            7            1   259.48026            1   259.48026 #> 3             2            7            2   244.47699            2   244.47699 #> 4             3            8            3   210.34496            3   210.34496 #> 5             4            4            4   375.47971            4   375.47971 #> 6             5            8            5   145.46477            5   145.46477 #> 7             6            6            6   596.23486            6   596.23486 #> 8             7            6            7   205.18285            7   205.18285 #> 9             8            7            8   385.01169            8   385.01169 #> 10            9           10            9   273.14832            9   273.14832 #> 11           10            5           10   286.00174           10   286.00174 #> 12           11            4           11   291.54761           11   291.54761 #> 13           12           12           12   193.49419           12   193.49419 #> 14           13            6           13   213.92755           13   213.92755 #> 15           14            4           14   251.60286           14   251.60286 #> 16           15            2           15   277.79489           15   277.79489 #> 17           16            7           16   213.88315           16   213.88315 #> 18           17            5           17   162.37303           17   162.37303 #> 19           18            3           18   152.01315           18   152.01315 #> 20           19            9           19   226.00221           19   226.00221 #> 21           20            4           20   222.59605           20   222.59605 #> 22           21            4           21    75.13322           21    75.13322 #> 23           22            2           22   133.46161           22   133.46161 #> 24           23            4           23   169.04733           23   169.04733 #> 25           24            1           24    49.04080           24    49.04080 #> 26           25            4           25   109.76794           25   109.76794 #> 27           26            3           26    62.96825           26    62.96825 #> 28           27            3           27    65.30697           27    65.30697 #> 29           28            4           28    74.46476           28    74.46476 #> 30           29            2           29    44.72136           29    44.72136 #> 31           30            4           30   159.05031           30   159.05031 #> 32           31            3           31    44.38468           31    44.38468 #> 33           32            2           32    43.32436           32    43.32436 #> 34           33            4           33    65.45991           33    65.45992 #> 35           34            4           34    64.66065           34    64.66065 #> 36           35            3           35    59.53990           35    59.53990 #> 37           36            1           36    51.35173           36    51.35173 #> 38           37            2           37    24.33105           37    24.33105 #> 39           38            3           38    59.20304           38    59.20304 #> 40           39            2           39    26.40076           39    26.40076 #> 41           40            2           40    63.19810           40    63.19810 #> 42           41            2           41    61.66036           41    61.66036 #> 43           42            4           42    65.55151           42    65.55151 #> 44           43            2           43   108.04629           43   108.04629 #> 45           44            5           44   109.07337           44   109.07337 #> 46           45            4           45    75.27284           45    75.27283 #> 47           46            1           46    24.08319           46    24.08319 #> 48           47            4           47    63.82006           47    63.82006 #> 49           48            4           48    65.00000           48    65.00000 #> 50           49            2           49    31.32092           49    31.32092 #> 51           50            4           50    75.00000           50    75.00000 #> 52           51            3           51    99.02020           51    99.02020 #> 53           52            3           52   100.28459           52   100.28459 #> 54           53            3           53   101.00495           53   101.00495 #> 55           54            2           54    20.88061           54    20.88061 #> 56           55            3           55    41.04875           55    41.04875 #> 57           56            2           56    43.00000           56    43.00000 #> 58           57            1           57    36.13862           57    36.13862 #>         x       y #> 1  1165.0 -1603.5 #> 2  1342.5 -1621.5 #> 3  1375.5 -1742.0 #> 4  1235.5 -1680.0 #> 5  1355.5 -1636.0 #> 6  1246.0 -1829.0 #> 7   989.0 -1681.0 #> 8  1361.0 -1794.0 #> 9  1118.5 -1786.5 #> 10 1124.5 -1871.5 #> 11 1353.5 -1947.0 #> 12 1217.0 -2001.0 #> 13 1263.0 -1862.0 #> 14 1273.5 -1729.0 #> 15 1103.0 -1664.0 #> 16 1016.5 -2038.5 #> 17 1253.5 -1952.5 #> 18 1069.0 -1971.5 #> 19 1187.0 -1796.0 #> 20 1086.0 -1752.5 #> 21 1258.0 -1692.5 #> 22 1054.5 -1685.0 #> 23 1281.0 -1622.0 #> 24 1203.5 -2008.0 #> 25 1290.0 -1565.5 #> 26 1306.5 -2028.0 #> 27 1304.0 -1785.5 #> 28 1293.5 -1787.0 #> 29 1330.5 -1935.0 #> 30 1333.0 -1770.0 #> 31 1067.0 -1897.5 #> 32 1189.5 -1692.5 #> 33 1175.5 -1677.0 #> 34 1308.5 -1832.0 #> 35 1300.0 -1831.5 #> 36 1194.0 -1853.5 #> 37 1230.5 -1838.0 #> 38 1173.0 -1872.0 #> 39 1187.0 -1772.5 #> 40 1356.0 -1787.5 #> 41 1091.5 -1938.5 #> 42 1155.5 -1856.5 #> 43 1329.5 -1929.0 #> 44 1154.5 -1722.5 #> 45 1306.0 -1872.5 #> 46 1279.5 -1936.5 #> 47 1275.0 -1865.0 #> 48 1072.5 -1729.0 #> 49 1045.5 -1729.0 #> 50 1224.5 -1747.0 #> 51 1281.0 -1928.5 #> 52 1307.0 -1986.5 #> 53 1040.0 -1780.5 #> 54 1079.5 -1776.5 #> 55 1340.0 -1786.0 #> 56 1064.5 -1823.0 #> 57 1175.5 -1829.0 #> 58 1216.5 -1761.5 #>"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkAtCrossPoint-AxialShapeGraph-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlink two Axial Lines (crosspoint) — unlinkAtCrossPoint,AxialShapeGraph-method","title":"Unlink two Axial Lines (crosspoint) — unlinkAtCrossPoint,AxialShapeGraph-method","text":"Unlink two crossing lines Axial ShapeGraph crossing point","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkAtCrossPoint-AxialShapeGraph-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlink two Axial Lines (crosspoint) — unlinkAtCrossPoint,AxialShapeGraph-method","text":"","code":"# S4 method for class 'AxialShapeGraph' unlinkAtCrossPoint(map, x, y, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkAtCrossPoint-AxialShapeGraph-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlink two Axial Lines (crosspoint) — unlinkAtCrossPoint,AxialShapeGraph-method","text":"map Axial ShapeGraph x X coordinate unlink crossing point y Y coordinate unlink crossing point copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkAtCrossPoint-AxialShapeGraph-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unlink two Axial Lines (crosspoint) — unlinkAtCrossPoint,AxialShapeGraph-method","text":"new Axial ShapeGraph unlinked lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkAtCrossPoint-AxialShapeGraph-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unlink two Axial Lines (crosspoint) — unlinkAtCrossPoint,AxialShapeGraph-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") unlinkAtCrossPoint(shapeGraph, 530925.0, 184119.0) #> Simple feature collection with 58 features and 6 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 1             0            6            0    396.1881 #> 2             1            7            1    259.4803 #> 3             2            7            2    244.4770 #> 4             3            8            3    210.3450 #> 5             4            4            4    375.4797 #> 6             5            8            5    145.4648 #> 7             6            6            6    596.2349 #> 8             7            6            7    205.1829 #> 9             8            7            8    385.0117 #> 10            9           10            9    273.1483 #>                          geometry Data Map Ref Line Length #> 1  LINESTRING (984 -1684, 1346...            0    396.1881 #> 2  LINESTRING (1306 -1497, 137...            1    259.4803 #> 3  LINESTRING (1257 -1772, 149...            2    244.4770 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450 #> 5  LINESTRING (1174 -1684, 153...            4    375.4797 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648 #> 7  LINESTRING (946 -1386, 1032...            6    596.2349 #> 8  LINESTRING (1350 -1896, 137...            7    205.1828 #> 9  LINESTRING (1117 -1979, 112...            8    385.0117 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkAtCrossPoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlink map lines at their crossing point — unlinkAtCrossPoint","title":"Unlink map lines at their crossing point — unlinkAtCrossPoint","text":"Unlink map lines crossing point","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkAtCrossPoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlink map lines at their crossing point — unlinkAtCrossPoint","text":"","code":"unlinkAtCrossPoint(map, x, y, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkAtCrossPoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlink map lines at their crossing point — unlinkAtCrossPoint","text":"map sala map x X coordinate crossing point y Y coordinate crossing point copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkAtCrossPoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unlink map lines at their crossing point — unlinkAtCrossPoint","text":"new map linked lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords-AxialShapeGraph-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlink two Axial Lines (coordinates) — unlinkCoords,AxialShapeGraph-method","title":"Unlink two Axial Lines (coordinates) — unlinkCoords,AxialShapeGraph-method","text":"Unlink two locations Axial ShapeGraph using point coordinates","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords-AxialShapeGraph-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlink two Axial Lines (coordinates) — unlinkCoords,AxialShapeGraph-method","text":"","code":"# S4 method for class 'AxialShapeGraph' unlinkCoords(map, fromX, fromY, toX, toY, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords-AxialShapeGraph-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlink two Axial Lines (coordinates) — unlinkCoords,AxialShapeGraph-method","text":"map Axial ShapeGraph fromX X coordinate first unlink point fromY Y coordinate first unlink point toX X coordinate second unlink point toY Y coordinate second unlink point copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords-AxialShapeGraph-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unlink two Axial Lines (coordinates) — unlinkCoords,AxialShapeGraph-method","text":"new Axial ShapeGraph unlinked lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords-AxialShapeGraph-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unlink two Axial Lines (coordinates) — unlinkCoords,AxialShapeGraph-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") unlinkCoords(shapeGraph, 982.8, -1620.3, 1080.4, -1873.5) #> Simple feature collection with 58 features and 6 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 1             0            6            0    396.1881 #> 2             1            7            1    259.4803 #> 3             2            7            2    244.4770 #> 4             3            8            3    210.3450 #> 5             4            4            4    375.4797 #> 6             5            8            5    145.4648 #> 7             6            6            6    596.2349 #> 8             7            6            7    205.1829 #> 9             8            7            8    385.0117 #> 10            9           10            9    273.1483 #>                          geometry Data Map Ref Line Length #> 1  LINESTRING (984 -1684, 1346...            0    396.1881 #> 2  LINESTRING (1306 -1497, 137...            1    259.4803 #> 3  LINESTRING (1257 -1772, 149...            2    244.4770 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450 #> 5  LINESTRING (1174 -1684, 153...            4    375.4797 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648 #> 7  LINESTRING (946 -1386, 1032...            6    596.2349 #> 8  LINESTRING (1350 -1896, 137...            7    205.1828 #> 9  LINESTRING (1117 -1979, 112...            8    385.0117 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords-PointMap-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlink two PointMap Cells (coordinates) — unlinkCoords,PointMap-method","title":"Unlink two PointMap Cells (coordinates) — unlinkCoords,PointMap-method","text":"Unlink two cells PointMap using point coordinates","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords-PointMap-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlink two PointMap Cells (coordinates) — unlinkCoords,PointMap-method","text":"","code":"# S4 method for class 'PointMap' unlinkCoords(map, fromX, fromY, toX, toY, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords-PointMap-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlink two PointMap Cells (coordinates) — unlinkCoords,PointMap-method","text":"map PointMap fromX X coordinate first unlink point fromY Y coordinate first unlink point toX X coordinate second unlink point toY Y coordinate second unlink point copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords-PointMap-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unlink two PointMap Cells (coordinates) — unlinkCoords,PointMap-method","text":"new PointMap unlinked points","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords-PointMap-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unlink two PointMap Cells (coordinates) — unlinkCoords,PointMap-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"gallery\",     \"gallery_lines.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.04,     fillX = 3.01,     fillY = 6.7,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) pointMap <- linkCoords(pointMap, 1.74, 6.7, 5.05, 5.24) pointMap <- unlinkCoords(pointMap, 1.74, 6.7, 5.05, 5.24)"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlink map points/lines as if selecting them using points — unlinkCoords","title":"Unlink map points/lines as if selecting them using points — unlinkCoords","text":"Unlink map points/lines selecting using points","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlink map points/lines as if selecting them using points — unlinkCoords","text":"","code":"unlinkCoords(map, fromX, fromY, toX, toY, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlink map points/lines as if selecting them using points — unlinkCoords","text":"map sala map fromX X coordinate origin point fromY Y coordinate origin point toX X coordinate target point toY Y coordinate target point copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkCoords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unlink map points/lines as if selecting them using points — unlinkCoords","text":"new map unlinked points/lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs-AxialShapeGraph-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlink two Axial Lines (refs) — unlinkRefs,AxialShapeGraph-method","title":"Unlink two Axial Lines (refs) — unlinkRefs,AxialShapeGraph-method","text":"Unlink two lines Axial ShapeGraph using refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs-AxialShapeGraph-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlink two Axial Lines (refs) — unlinkRefs,AxialShapeGraph-method","text":"","code":"# S4 method for class 'AxialShapeGraph' unlinkRefs(map, fromRef, toRef, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs-AxialShapeGraph-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlink two Axial Lines (refs) — unlinkRefs,AxialShapeGraph-method","text":"map Axial ShapeGraph fromRef Ref first unlink line toRef Ref second unlink line copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs-AxialShapeGraph-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unlink two Axial Lines (refs) — unlinkRefs,AxialShapeGraph-method","text":"new Axial ShapeGraph unlinked lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs-AxialShapeGraph-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unlink two Axial Lines (refs) — unlinkRefs,AxialShapeGraph-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"barnsbury\",     \"barnsbury_small_axial_original.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeGraph <- as(sfMap, \"AxialShapeGraph\") unlinkRefs(shapeGraph, 12L, 34L) #> Simple feature collection with 58 features and 6 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 946 ymin: -2177 xmax: 1537 ymax: -1386 #> CRS:           NA #> First 10 features: #>    Depthmap_Ref Connectivity Data_Map_Ref Line_Length #> 1             0            6            0    396.1881 #> 2             1            7            1    259.4803 #> 3             2            7            2    244.4770 #> 4             3            8            3    210.3450 #> 5             4            4            4    375.4797 #> 6             5            8            5    145.4648 #> 7             6            6            6    596.2349 #> 8             7            6            7    205.1829 #> 9             8            7            8    385.0117 #> 10            9           10            9    273.1483 #>                          geometry Data Map Ref Line Length #> 1  LINESTRING (984 -1684, 1346...            0    396.1881 #> 2  LINESTRING (1306 -1497, 137...            1    259.4803 #> 3  LINESTRING (1257 -1772, 149...            2    244.4770 #> 4  LINESTRING (1200 -1581, 127...            3    210.3450 #> 5  LINESTRING (1174 -1684, 153...            4    375.4797 #> 6  LINESTRING (1223 -1898, 126...            5    145.4648 #> 7  LINESTRING (946 -1386, 1032...            6    596.2349 #> 8  LINESTRING (1350 -1896, 137...            7    205.1828 #> 9  LINESTRING (1117 -1979, 112...            8    385.0117 #> 10 LINESTRING (988 -1876, 1261...            9    273.1483"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs-PointMap-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlink two PointMap Cells (refs) — unlinkRefs,PointMap-method","title":"Unlink two PointMap Cells (refs) — unlinkRefs,PointMap-method","text":"Unlink two cells PointMap using refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs-PointMap-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlink two PointMap Cells (refs) — unlinkRefs,PointMap-method","text":"","code":"# S4 method for class 'PointMap' unlinkRefs(map, fromRef, toRef, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs-PointMap-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlink two PointMap Cells (refs) — unlinkRefs,PointMap-method","text":"map PointMap fromRef Ref first unlink line toRef Ref second unlink line copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs-PointMap-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unlink two PointMap Cells (refs) — unlinkRefs,PointMap-method","text":"new PointMap unlinked points","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs-PointMap-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unlink two PointMap Cells (refs) — unlinkRefs,PointMap-method","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"gallery\",     \"gallery_lines.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.04,     fillX = 3.01,     fillY = 6.7,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) pointMap <- linkRefs(pointMap, 1835056L, 7208971L) pointMap <- unlinkRefs(pointMap, 1835056L, 7208971L)"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Unlink map points/lines using their refs — unlinkRefs","title":"Unlink map points/lines using their refs — unlinkRefs","text":"Unlink map points/lines using refs","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unlink map points/lines using their refs — unlinkRefs","text":"","code":"unlinkRefs(map, fromRef, toRef, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unlink map points/lines using their refs — unlinkRefs","text":"map sala map fromRef ref origin element toRef ref target element copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unlinkRefs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unlink map points/lines using their refs — unlinkRefs","text":"new map unlinked points/lines","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unmakeVGAGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Unmake the graph in a PointMap — unmakeVGAGraph","title":"Unmake the graph in a PointMap — unmakeVGAGraph","text":"Unmake graph PointMap","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unmakeVGAGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unmake the graph in a PointMap — unmakeVGAGraph","text":"","code":"unmakeVGAGraph(pointMap, removeLinks = FALSE, copyMap = TRUE, verbose = FALSE)"},{"path":"https://spatialnous.github.io/alcyon/reference/unmakeVGAGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unmake the graph in a PointMap — unmakeVGAGraph","text":"pointMap input PointMap removeLinks Also remove links copyMap Optional. Copy internal sala map verbose Optional. Show information process.","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unmakeVGAGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unmake the graph in a PointMap — unmakeVGAGraph","text":"new PointMap without points graph","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/unmakeVGAGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unmake the graph in a PointMap — unmakeVGAGraph","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   shapeMap <- as(sfMap[, vector()], \"ShapeMap\") pointMap <- makeVGAPointMap(   sfMap,   gridSize = 0.5,   fillX = 3.01,   fillY = 6.7,   maxVisibility = NA,   boundaryGraph = FALSE,   verbose = FALSE ) unmakeVGAGraph(   pointMap = pointMap,   removeLinks = FALSE ) #> stars object with 2 dimensions and 7 attributes #> attribute(s): #>                           Min.     1st Qu.     Median         Mean     3rd Qu. #> Ref                    0.00000 196610.7500 393221.500 3.932215e+05 589832.2500 #> Connectivity          39.00000     65.0000     75.000 7.106667e+01     81.0000 #> Point First Moment    92.03807    145.1355    173.267 1.750389e+02    202.1131 #> Point Second Moment  240.00000    388.5625    531.500 5.387111e+02    665.5625 #> blocked                0.00000      0.0000      0.000 3.205128e-01      1.0000 #> contextfilled          0.00000      0.0000      0.000 0.000000e+00      0.0000 #> filled                 0.00000      0.0000      1.000 5.769231e-01      1.0000 #>                             Max. NA's #> Ref                  786443.0000    0 #> Connectivity             88.0000   66 #> Point First Moment      292.1885   66 #> Point Second Moment    1157.7500   66 #> blocked                   1.0000    0 #> contextfilled             0.0000    0 #> filled                    1.0000    0 #> dimension(s): #>   from to offset delta x/y #> x    1 13   1.75   0.5 [x] #> y    1 12   7.25  -0.5 [y]"},{"path":"https://spatialnous.github.io/alcyon/reference/vgaIsovist.html","id":null,"dir":"Reference","previous_headings":"","what":"Visibility Graph Analysis - isovist metrics — vgaIsovist","title":"Visibility Graph Analysis - isovist metrics — vgaIsovist","text":"Runs axial analysis get local metrics Control Controllability","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/vgaIsovist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visibility Graph Analysis - isovist metrics — vgaIsovist","text":"","code":"vgaIsovist(pointMap, boundaryMap, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/vgaIsovist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visibility Graph Analysis - isovist metrics — vgaIsovist","text":"pointMap PointMap boundaryMap ShapeMap lines copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/vgaIsovist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visibility Graph Analysis - isovist metrics — vgaIsovist","text":"new PointMap results included","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/vgaIsovist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visibility Graph Analysis - isovist metrics — vgaIsovist","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.5,     fillX = 3.0,     fillY = 6.0,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) boundaryMap <- as(sfMap[, c()], \"ShapeMap\") vgaIsovist(pointMap, boundaryMap) #> stars object with 2 dimensions and 15 attributes #> attribute(s): #>                                  Min.      1st Qu.       Median         Mean #> Ref                        0.00000000 1.966108e+05 3.932215e+05 3.932215e+05 #> Connectivity              39.00000000 6.500000e+01 7.500000e+01 7.106667e+01 #> Point First Moment        92.03807068 1.451355e+02 1.732670e+02 1.750389e+02 #> Point Second Moment      240.00000000 3.885625e+02 5.315000e+02 5.387111e+02 #> blocked                    0.00000000 0.000000e+00 0.000000e+00 3.205128e-01 #> contextfilled              0.00000000 0.000000e+00 0.000000e+00 0.000000e+00 #> filled                     0.00000000 0.000000e+00 1.000000e+00 5.769231e-01 #> Isovist Area              10.97448063 1.704208e+01 1.972816e+01 1.895598e+01 #> Isovist Compactness        0.46210757 4.860164e-01 5.304640e-01 5.431781e-01 #> Isovist Drift Angle        9.82207966 1.064620e+02 1.794039e+02 1.847821e+02 #> Isovist Drift Magnitude    0.27391502 1.307139e+00 1.817429e+00 1.755722e+00 #> Isovist Max Radial         3.59407520 4.838256e+00 5.383654e+00 5.337678e+00 #> Isovist Min Radial         0.07054356 3.697004e-01 4.786798e-01 6.104857e-01 #> Isovist Occlusivity        1.45719266 2.207036e+00 3.058959e+00 3.070312e+00 #> Isovist Perimeter         14.01030445 1.875724e+01 2.116433e+01 2.098679e+01 #>                               3rd Qu.         Max. NA's #> Ref                      5.898322e+05 7.864430e+05    0 #> Connectivity             8.100000e+01 8.800000e+01   66 #> Point First Moment       2.021131e+02 2.921885e+02   66 #> Point Second Moment      6.655625e+02 1.157750e+03   66 #> blocked                  1.000000e+00 1.000000e+00    0 #> contextfilled            0.000000e+00 0.000000e+00    0 #> filled                   1.000000e+00 1.000000e+00    0 #> Isovist Area             2.203810e+01 2.358941e+01   66 #> Isovist Compactness      5.984749e-01 7.025847e-01   66 #> Isovist Drift Angle      2.764781e+02 3.576884e+02   66 #> Isovist Drift Magnitude  2.257860e+00 3.034088e+00   66 #> Isovist Max Radial       5.894182e+00 6.769641e+00   66 #> Isovist Min Radial       9.041362e-01 1.445549e+00   66 #> Isovist Occlusivity      3.736115e+00 5.765966e+00   66 #> Isovist Perimeter        2.389084e+01 2.472556e+01   66 #> dimension(s): #>   from to offset delta x/y #> x    1 13   1.75   0.5 [x] #> y    1 12   7.25  -0.5 [y]"},{"path":"https://spatialnous.github.io/alcyon/reference/vgaThroughVision.html","id":null,"dir":"Reference","previous_headings":"","what":"Visibility Graph Analysis - Through Vision — vgaThroughVision","title":"Visibility Graph Analysis - Through Vision — vgaThroughVision","text":"Runs Visibility Graph Analysis get Vision metric","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/vgaThroughVision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visibility Graph Analysis - Through Vision — vgaThroughVision","text":"","code":"vgaThroughVision(pointMap, copyMap = TRUE)"},{"path":"https://spatialnous.github.io/alcyon/reference/vgaThroughVision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visibility Graph Analysis - Through Vision — vgaThroughVision","text":"pointMap PointMap copyMap Optional. Copy internal sala map","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/vgaThroughVision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visibility Graph Analysis - Through Vision — vgaThroughVision","text":"new PointMap results included","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/vgaThroughVision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visibility Graph Analysis - Through Vision — vgaThroughVision","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.5,     fillX = 3.0,     fillY = 6.0,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) vgaThroughVision(pointMap) #> stars object with 2 dimensions and 8 attributes #> attribute(s): #>                           Min.     1st Qu.     Median         Mean     3rd Qu. #> Ref                    0.00000 196610.7500 393221.500 3.932215e+05 589832.2500 #> Connectivity          39.00000     65.0000     75.000 7.106667e+01     81.0000 #> Point First Moment    92.03807    145.1355    173.267 1.750389e+02    202.1131 #> Point Second Moment  240.00000    388.5625    531.500 5.387111e+02    665.5625 #> blocked                0.00000      0.0000      0.000 3.205128e-01      1.0000 #> contextfilled          0.00000      0.0000      0.000 0.000000e+00      0.0000 #> filled                 0.00000      0.0000      1.000 5.769231e-01      1.0000 #> Through vision         0.00000     82.0000    246.000 2.603000e+02    421.0000 #>                             Max. NA's #> Ref                  786443.0000    0 #> Connectivity             88.0000   66 #> Point First Moment      292.1885   66 #> Point Second Moment    1157.7500   66 #> blocked                   1.0000    0 #> contextfilled             0.0000    0 #> filled                    1.0000    0 #> Through vision          654.0000   66 #> dimension(s): #>   from to offset delta x/y #> x    1 13   1.75   0.5 [x] #> y    1 12   7.25  -0.5 [y]"},{"path":"https://spatialnous.github.io/alcyon/reference/vgaVisualLocal.html","id":null,"dir":"Reference","previous_headings":"","what":"Visibility Graph Analysis - Visual local metrics — vgaVisualLocal","title":"Visibility Graph Analysis - Visual local metrics — vgaVisualLocal","text":"Runs Visibility Graph Analysis get visual local metrics","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/vgaVisualLocal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visibility Graph Analysis - Visual local metrics — vgaVisualLocal","text":"","code":"vgaVisualLocal(   pointMap,   nthreads = 1L,   algorithm = VGALocalAlgorithm$Standard,   copyMap = TRUE,   gatesOnly = FALSE,   progress = FALSE )"},{"path":"https://spatialnous.github.io/alcyon/reference/vgaVisualLocal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visibility Graph Analysis - Visual local metrics — vgaVisualLocal","text":"pointMap PointMap nthreads Optional. Number threads use (defaults 1) algorithm Optional. algorithm use. See ?VGALocalAlgorithm copyMap Optional. Copy internal sala map gatesOnly Optional. keep values specific gates progress Optional. Enable progress display","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/vgaVisualLocal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visibility Graph Analysis - Visual local metrics — vgaVisualLocal","text":"new PointMap results included","code":""},{"path":"https://spatialnous.github.io/alcyon/reference/vgaVisualLocal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visibility Graph Analysis - Visual local metrics — vgaVisualLocal","text":"","code":"mifFile <- system.file(     \"extdata\", \"testdata\", \"simple\",     \"simple_interior.mif\",     package = \"alcyon\"   )   sfMap <- st_read(mifFile,     geometry_column = 1L, quiet = TRUE   )   pointMap <- makeVGAPointMap(     sfMap,     gridSize = 0.5,     fillX = 3.0,     fillY = 6.0,     maxVisibility = NA,     boundaryGraph = FALSE,     verbose = FALSE   ) vgaVisualLocal(pointMap, FALSE) #> stars object with 2 dimensions and 10 attributes #> attribute(s): #>                                       Min.      1st Qu.       Median #> Ref                              0.0000000 1.966108e+05 3.932215e+05 #> Connectivity                    39.0000000 6.500000e+01 7.500000e+01 #> Point First Moment              92.0380707 1.451355e+02 1.732670e+02 #> Point Second Moment            240.0000000 3.885625e+02 5.315000e+02 #> blocked                          0.0000000 0.000000e+00 0.000000e+00 #> contextfilled                    0.0000000 0.000000e+00 0.000000e+00 #> filled                           0.0000000 0.000000e+00 1.000000e+00 #> Visual Clustering Coefficient    0.8014629 8.408053e-01 9.060150e-01 #> Visual Control                   0.5896810 8.775250e-01 1.012651e+00 #> Visual Controllability           0.4382023 7.222222e-01 8.333333e-01 #>                                        Mean      3rd Qu.         Max. NA's #> Ref                            3.932215e+05 5.898322e+05 7.864430e+05    0 #> Connectivity                   7.106667e+01 8.100000e+01 8.800000e+01   66 #> Point First Moment             1.750389e+02 2.021131e+02 2.921885e+02   66 #> Point Second Moment            5.387111e+02 6.655625e+02 1.157750e+03   66 #> blocked                        3.205128e-01 1.000000e+00 1.000000e+00    0 #> contextfilled                  0.000000e+00 0.000000e+00 0.000000e+00    0 #> filled                         5.769231e-01 1.000000e+00 1.000000e+00    0 #> Visual Clustering Coefficient  9.014550e-01 9.466245e-01 1.000000e+00   66 #> Visual Control                 1.000000e+00 1.169747e+00 1.295770e+00   66 #> Visual Controllability         7.899721e-01 9.000000e-01 9.777778e-01   66 #> dimension(s): #>   from to offset delta x/y #> x    1 13   1.75   0.5 [x] #> y    1 12   7.25  -0.5 [y]"},{"path":"https://spatialnous.github.io/alcyon/news/index.html","id":"alcyon-070","dir":"Changelog","previous_headings":"","what":"alcyon 0.7.0","title":"alcyon 0.7.0","text":"CRAN release: 2025-01-21 Sala: Increase calculation accuracy achieve parity x86 arm64 results Force isovist polygons closed","code":""},{"path":"https://spatialnous.github.io/alcyon/news/index.html","id":"alcyon-060","dir":"Changelog","previous_headings":"","what":"alcyon 0.6.0","title":"alcyon 0.6.0","text":"CRAN release: 2024-12-22 Use ALL_CXXFLAGS instead ALL_OBJCXXFLAGS build Update latest sala now contains genlib Add pkgdown fix descriptions Fix agent analysis unlinking sanitizer errors Add point--point unlinking","code":""},{"path":"https://spatialnous.github.io/alcyon/news/index.html","id":"alcyon-050","dir":"Changelog","previous_headings":"","what":"alcyon 0.5.0","title":"alcyon 0.5.0","text":"CRAN release: 2024-08-26 Add multi-threaded analysis Global VGA (Metric, Topological, Tulip), VGA Local analysis (generating metrics Control, Controllability Clustering Coefficient), well new algorithm Local analysis using adjacency matrix.","code":""},{"path":"https://spatialnous.github.io/alcyon/news/index.html","id":"alcyon-040","dir":"Changelog","previous_headings":"","what":"alcyon 0.4.0","title":"alcyon 0.4.0","text":"CRAN release: 2024-07-25 Fix isovist 2-point generation Allow one--one traversal pointmaps segment maps","code":""},{"path":"https://spatialnous.github.io/alcyon/news/index.html","id":"alcyon-030","dir":"Changelog","previous_headings":"","what":"alcyon 0.3.0","title":"alcyon 0.3.0","text":"CRAN release: 2024-06-19 Fix CMake issues w.r.t macOS (CMake /Applications) Overhaul package use extend sf stars S3 classes Add agent-analysis vignette","code":""},{"path":"https://spatialnous.github.io/alcyon/news/index.html","id":"alcyon-020","dir":"Changelog","previous_headings":"","what":"alcyon 0.2.0","title":"alcyon 0.2.0","text":"CRAN release: 2024-05-27 Initial CRAN submission.","code":""}]
